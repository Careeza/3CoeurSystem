Makefile:2:CFLAGS = -Wall -Wextra -Iinclude/Exec -Iinclude/Tools -Iinclude/Class -Iinclude/Class/GameScene -Iinclude/Class/Scene -std=c++11 -g -fsanitize=address
Makefile:3:LDFLAGS = `sdl2-config --libs --cflags` -lSDL2_image -lSDL2_ttf -lm
Makefile:9:PRECOMPILE = mkdir -p $(dir $@)
Makefile:14:PRECOMPILE += ;mkdir -p $(dir $(DEPS_DIR)/$*)
Makefile:15:CFLAGS += -MT $@ -MMD -MP -MF $(DEPS_DIR)/$*.Td
Makefile:16:POSTCOMPILE += ;mv -f $(DEPS_DIR)/$*.Td $(DEPS_DIR)/$*.d && touch $@
Makefile:35:	$(CC) $(CFLAGS) -c -o $@ $<
Makefile:44:	$(CC) -o $@ $^ $(CFLAGS) $(LDFLAGS)
Makefile:47:	rm -rf build
Makefile:50:	rm -rf game editMap editAnimation editAssets
src/EditAnimation/gameLoop/loop.cpp:5:    if (table->att & KeyPress)
src/EditAnimation/gameLoop/loop.cpp:6:        MC->loadAnimation(ATTACK);
src/EditAnimation/gameLoop/loop.cpp:7:    if (table->dodge & KeyPress)
src/EditAnimation/gameLoop/loop.cpp:9:        MC->swapMC();
src/EditAnimation/gameLoop/loop.cpp:10:        MC->loadAnimation(STATIC);
src/EditAnimation/gameLoop/loop.cpp:12:    if (table->right & KeyPress || table->left & KeyPress)
src/EditAnimation/gameLoop/loop.cpp:13:        MC->loadAnimation(WALK);
src/EditAnimation/gameLoop/loop.cpp:14:    if (table->left & KeyPress)
src/EditAnimation/gameLoop/loop.cpp:15:        MC->setRight(false);
src/EditAnimation/gameLoop/loop.cpp:16:    if (table->right & KeyPress)
src/EditAnimation/gameLoop/loop.cpp:17:        MC->setRight(true);
src/EditAnimation/gameLoop/loop.cpp:39:    return (scene->QueryMC()->QueryPhysic()->QueryRawHitbox());
src/EditAnimation/gameLoop/loop.cpp:51:    animation->restartAnimation();
src/EditAnimation/gameLoop/loop.cpp:53:    indexMax = animation->QueryMaxIndex();
src/EditAnimation/gameLoop/loop.cpp:56:        hitBox = animation->QueryHitbox(right);
src/EditAnimation/gameLoop/loop.cpp:58:        animation->QuerySize(w, h);
src/EditAnimation/gameLoop/loop.cpp:61:        std::cout << ", " << hitBox->QueryW() / (float)w;
src/EditAnimation/gameLoop/loop.cpp:62:        std::cout << ", " << hitBox->QueryH() / (float)h;
src/EditAnimation/gameLoop/loop.cpp:63:        std::cout << ", " << hitBox->QueryX() / (float)w;
src/EditAnimation/gameLoop/loop.cpp:64:        std::cout << ", " << hitBox->QueryY() / (float)h;
src/EditAnimation/gameLoop/loop.cpp:67:        animation->nextFrame();
src/EditAnimation/gameLoop/loop.cpp:79:    MC = scene->QueryMC();
src/EditAnimation/gameLoop/loop.cpp:80:    animation = MC->QueryAnimation();
src/EditAnimation/gameLoop/loop.cpp:81:    animationTime = animation->QueryAnimationTime();
src/EditAnimation/gameLoop/loop.cpp:84:        animation->nextFrame();
src/EditAnimation/gameLoop/loop.cpp:86:        animation->previousFrame();
src/EditAnimation/gameLoop/loop.cpp:94:        animation->setAnimationTime(animationTime);
src/EditAnimation/gameLoop/loop.cpp:98:        animationTime -= 1;
src/EditAnimation/gameLoop/loop.cpp:99:        animation->setAnimationTime(animationTime);
src/EditAnimation/gameLoop/loop.cpp:104:        animation->setAnimationTime(animationTime);
src/EditAnimation/gameLoop/loop.cpp:108:        animationTime -= 10;
src/EditAnimation/gameLoop/loop.cpp:109:        animation->setAnimationTime(animationTime);
src/EditAnimation/gameLoop/loop.cpp:112:        getHitBox(scene)->extandW(pas);
src/EditAnimation/gameLoop/loop.cpp:114:        getHitBox(scene)->extandW(-pas);
src/EditAnimation/gameLoop/loop.cpp:116:        getHitBox(scene)->extandH(pas);
src/EditAnimation/gameLoop/loop.cpp:118:        getHitBox(scene)->extandH(-pas);
src/EditAnimation/gameLoop/loop.cpp:120:        getHitBox(scene)->moveX(pas);
src/EditAnimation/gameLoop/loop.cpp:122:        getHitBox(scene)->moveX(-pas);
src/EditAnimation/gameLoop/loop.cpp:124:        getHitBox(scene)->moveY(pas);
src/EditAnimation/gameLoop/loop.cpp:126:        getHitBox(scene)->moveY(-pas);
src/EditAnimation/gameLoop/loop.cpp:130:        pas--;
src/EditAnimation/gameLoop/loop.cpp:132:        printHitBox(animation, MC->VerifyRight());
src/EditAnimation/gameLoop/loop.cpp:139:    index = scene->QueryIndexByName("fps");
src/EditAnimation/gameLoop/loop.cpp:140:    element = scene->QuerySingleElement(index);
src/EditAnimation/gameLoop/loop.cpp:141:    element->changeText(std::to_string(animationTime), render->QueryRender());
src/EditAnimation/gameLoop/loop.cpp:143:    index = scene->QueryIndexByName("pas");
src/EditAnimation/gameLoop/loop.cpp:144:    element = scene->QuerySingleElement(index);
src/EditAnimation/gameLoop/loop.cpp:145:    element->changeText(std::to_string(pas), render->QueryRender());
src/EditAnimation/gameLoop/loop.cpp:147:    index = scene->QueryIndexByName("index");
src/EditAnimation/gameLoop/loop.cpp:148:    element = scene->QuerySingleElement(index);
src/EditAnimation/gameLoop/loop.cpp:149:    frameIndex = animation->QueryIndex() + 1;
src/EditAnimation/gameLoop/loop.cpp:150:    nbFrame = animation->QueryMaxIndex();
src/EditAnimation/gameLoop/loop.cpp:151:    element->changeText(std::to_string(frameIndex) + "/" + std::to_string(nbFrame), render->QueryRender());
src/EditAnimation/gameLoop/loop.cpp:156:    index = scene->QueryIndexByName("w");
src/EditAnimation/gameLoop/loop.cpp:157:    element = scene->QuerySingleElement(index);
src/EditAnimation/gameLoop/loop.cpp:158:    element->changeText("w=" + std::to_string(hitBox->QueryW()), render->QueryRender());
src/EditAnimation/gameLoop/loop.cpp:160:    index = scene->QueryIndexByName("h");
src/EditAnimation/gameLoop/loop.cpp:161:    element = scene->QuerySingleElement(index);
src/EditAnimation/gameLoop/loop.cpp:162:    element->changeText("h=" + std::to_string(hitBox->QueryH()), render->QueryRender());
src/EditAnimation/gameLoop/loop.cpp:164:    index = scene->QueryIndexByName("x");
src/EditAnimation/gameLoop/loop.cpp:165:    element = scene->QuerySingleElement(index);
src/EditAnimation/gameLoop/loop.cpp:166:    element->changeText("x=" + std::to_string(hitBox->QueryX()), render->QueryRender());
src/EditAnimation/gameLoop/loop.cpp:168:    index = scene->QueryIndexByName("y");
src/EditAnimation/gameLoop/loop.cpp:169:    element = scene->QuerySingleElement(index);
src/EditAnimation/gameLoop/loop.cpp:170:    element->changeText("y=" + std::to_string(hitBox->QueryY()), render->QueryRender());
src/EditAnimation/gameLoop/loop.cpp:177:        render->saveScreen();
src/EditAnimation/gameLoop/loop.cpp:189:        editAnimationUseAction(&action, scene->QueryMC());
src/EditAnimation/gameLoop/loop.cpp:212:    if ((actionTable->right & KeyHoldPress) && (actionTable->left & KeyReleaseNoPress))
src/EditAnimation/gameLoop/loop.cpp:213:        action->right = actionTable->right;
src/EditAnimation/gameLoop/loop.cpp:214:    if ((actionTable->left & KeyHoldPress) && (actionTable->right & KeyReleaseNoPress))
src/EditAnimation/gameLoop/loop.cpp:215:        action->left = actionTable->left;
src/EditAnimation/gameLoop/loop.cpp:217:    if ((actionTable->up & KeyHoldPress) && (actionTable->down & KeyReleaseNoPress))
src/EditAnimation/gameLoop/loop.cpp:218:        action->up = actionTable->up;
src/EditAnimation/gameLoop/loop.cpp:219:    if ((actionTable->down & KeyHoldPress) && (actionTable->up & KeyReleaseNoPress))
src/EditAnimation/gameLoop/loop.cpp:220:        action->down = actionTable->down;
src/EditAnimation/gameLoop/loop.cpp:222:    action->escape = actionTable->escape;
src/EditAnimation/gameLoop/loop.cpp:223:    action->att = actionTable->att;
src/EditAnimation/gameLoop/loop.cpp:224:    action->dodge = actionTable->dodge;
src/EditAnimation/gameLoop/loop.cpp:225:    action->jump = actionTable->jump;
src/EditAnimation/gameLoop/loop.cpp:236:    scene = initGameScene(render->QueryRender());
src/EditAnimation/gameLoop/loop.cpp:243:    MC = scene->QueryMC();
src/EditAnimation/gameLoop/loop.cpp:244:    animation = MC->QueryAnimation();
src/EditAnimation/gameLoop/loop.cpp:248:    int index = scene->QueryIndexByName("fps");
src/EditAnimation/gameLoop/loop.cpp:249:    std::shared_ptr<CS_Element> element = scene->QuerySingleElement(index);
src/EditAnimation/gameLoop/loop.cpp:250:    element->changeText(std::to_string(animation->QueryAnimationTime()), render->QueryRender());
src/EditAnimation/gameLoop/loop.cpp:252:    MC->getFrame();
src/EditAnimation/gameLoop/loop.cpp:263:            MC->updateFrame(deltaTMS);
src/EditAnimation/gameLoop/loop.cpp:265:        MC->getFrame();
src/EditAnimation/gameLoop/loop.cpp:267:        render->renderScene(scene);
src/EditAnimation/gameLoop/loop.cpp:268:        render->renderGameScene(scene);
src/EditAnimation/gameLoop/loop.cpp:269:        render->dispScreen();
src/EditAnimation/gameLoop/loop.cpp:271:        SDL_Delay(fmax(0, (1000 / (float)60 - timer.get_ticks())));
src/EditAnimation/gameLoop/Init/initGameScene.cpp:8:    scene->loadRenderer(render);
src/EditAnimation/gameLoop/Init/initGameScene.cpp:10:    scene->loadMC(initMC(render));
src/EditAnimation/gameLoop/Init/initGameScene.cpp:11:    scene->loadCamera(initCamera());
src/EditAnimation/gameLoop/Init/initGameScene.cpp:13:    scene->setBorderColor(0xFF, 0xFF, 0xFF, 0xFF);
src/EditAnimation/gameLoop/Init/initGameScene.cpp:14://    scene->CS_createElementToScene("filtre", 75, 100, 0, 0, 2);
src/EditAnimation/gameLoop/Init/initGameScene.cpp:15:    scene->setSceneColor(0x00, 0x00, 0xFF, 0xFF);
src/EditAnimation/gameLoop/Init/initGameScene.cpp:16:    scene->createElementToScene("backGround", 75, 100, 0, 0, 0);
src/EditAnimation/gameLoop/Init/initGameScene.cpp:17:    scene->setSceneColor(0x0, 0x0, 0x0, 0xFF);
src/EditAnimation/gameLoop/Init/initGameScene.cpp:18:    scene->createElementToScene("backGround2", 25, 100, 75, 0, 0);
src/EditAnimation/gameLoop/Init/initGameScene.cpp:19:    scene->addBorder(-1);
src/EditAnimation/gameLoop/Init/initGameScene.cpp:20:    scene->setTextColor(0xFF, 0xFF, 0xFF, 0xFF);
src/EditAnimation/gameLoop/Init/initGameScene.cpp:21:    scene->createButtonToScene("Asset1", 12.5, 10, 75, 0, 1, &useButton0);
src/EditAnimation/gameLoop/Init/initGameScene.cpp:22:    scene->writeTexte(-1, ">");
src/EditAnimation/gameLoop/Init/initGameScene.cpp:23:    scene->createButtonToScene("Asset2", 12.5, 10, 87.5, 0, 1, &useButton1);
src/EditAnimation/gameLoop/Init/initGameScene.cpp:24:    scene->writeTexte(-1, "<");
src/EditAnimation/gameLoop/Init/initGameScene.cpp:25:    scene->createButtonToScene("Asset3", 12.5, 10, 75, 10, 1, &useButton2);
src/EditAnimation/gameLoop/Init/initGameScene.cpp:26:    scene->writeTexte(-1, "Go");
src/EditAnimation/gameLoop/Init/initGameScene.cpp:27:    scene->createButtonToScene("Asset4", 12.5, 10, 87.5, 10, 1, &useButton3);
src/EditAnimation/gameLoop/Init/initGameScene.cpp:28:    scene->writeTexte(-1, "||");
src/EditAnimation/gameLoop/Init/initGameScene.cpp:29:    scene->createButtonToScene("Asset5", 12.5, 10, 75, 20, 1, &useButton4);
src/EditAnimation/gameLoop/Init/initGameScene.cpp:30:    scene->writeTexte(-1, "+");
src/EditAnimation/gameLoop/Init/initGameScene.cpp:31:    scene->createButtonToScene("Asset6", 12.5, 10, 87.5, 20, 1, &useButton5);
src/EditAnimation/gameLoop/Init/initGameScene.cpp:32:    scene->writeTexte(-1, "-");
src/EditAnimation/gameLoop/Init/initGameScene.cpp:33:    scene->createButtonToScene("Asset7", 12.5, 10, 75, 30, 1, &useButton6);
src/EditAnimation/gameLoop/Init/initGameScene.cpp:34:    scene->writeTexte(-1, "++");
src/EditAnimation/gameLoop/Init/initGameScene.cpp:35:    scene->createButtonToScene("Asset8", 12.5, 10, 87.5, 30, 1, &useButton7);
src/EditAnimation/gameLoop/Init/initGameScene.cpp:36:    scene->writeTexte(-1, "--");
src/EditAnimation/gameLoop/Init/initGameScene.cpp:37:    scene->createButtonToScene("Asset9", 12.5, 10, 75, 40, 1, &useButton8);
src/EditAnimation/gameLoop/Init/initGameScene.cpp:38:    scene->writeTexte(-1, "w+");
src/EditAnimation/gameLoop/Init/initGameScene.cpp:39:    scene->createButtonToScene("Asset10", 12.5, 10, 87.5, 40, 1, &useButton9);
src/EditAnimation/gameLoop/Init/initGameScene.cpp:40:    scene->writeTexte(-1, "w-");
src/EditAnimation/gameLoop/Init/initGameScene.cpp:41:    scene->createButtonToScene("Asset11", 12.5, 10, 75, 50, 1, &useButton10);
src/EditAnimation/gameLoop/Init/initGameScene.cpp:42:    scene->writeTexte(-1, "h+");
src/EditAnimation/gameLoop/Init/initGameScene.cpp:43:    scene->createButtonToScene("Asset12", 12.5, 10, 87.5, 50, 1, &useButton11);
src/EditAnimation/gameLoop/Init/initGameScene.cpp:44:    scene->writeTexte(-1, "h-");
src/EditAnimation/gameLoop/Init/initGameScene.cpp:45:    scene->createButtonToScene("Asset13", 12.5, 10, 75, 60, 1, &useButton12);
src/EditAnimation/gameLoop/Init/initGameScene.cpp:46:    scene->writeTexte(-1, "x+");
src/EditAnimation/gameLoop/Init/initGameScene.cpp:47:    scene->createButtonToScene("Asset14", 12.5, 10, 87.5, 60, 1, &useButton13);
src/EditAnimation/gameLoop/Init/initGameScene.cpp:48:    scene->writeTexte(-1, "x-");
src/EditAnimation/gameLoop/Init/initGameScene.cpp:49:    scene->createButtonToScene("Asset15", 12.5, 10, 75, 70, 1, &useButton14);
src/EditAnimation/gameLoop/Init/initGameScene.cpp:50:    scene->writeTexte(-1, "y+");
src/EditAnimation/gameLoop/Init/initGameScene.cpp:51:    scene->createButtonToScene("Asset16", 12.5, 10, 87.5, 70, 1, &useButton15);
src/EditAnimation/gameLoop/Init/initGameScene.cpp:52:    scene->writeTexte(-1, "y-");
src/EditAnimation/gameLoop/Init/initGameScene.cpp:53:    scene->createButtonToScene("Asset17", 12.5, 10, 75, 80, 1, &useButton16);
src/EditAnimation/gameLoop/Init/initGameScene.cpp:54:    scene->writeTexte(-1, "pas+");
src/EditAnimation/gameLoop/Init/initGameScene.cpp:55:    scene->createButtonToScene("Asset18", 12.5, 10, 87.5, 80, 1, &useButton17);
src/EditAnimation/gameLoop/Init/initGameScene.cpp:56:    scene->writeTexte(-1, "pas-");
src/EditAnimation/gameLoop/Init/initGameScene.cpp:57:    scene->createButtonToSceneFromPng("Asset19", "resources/source/old/greenCube.png",  12.5, 10, 75, 90, 1, &useButton18);
src/EditAnimation/gameLoop/Init/initGameScene.cpp:58:    scene->createButtonToSceneFromPng("Asset20", "resources/source/old/greenCube.png",  12.5, 10, 87.5, 90, 1, &closeGame);
src/EditAnimation/gameLoop/Init/initGameScene.cpp:60:    scene->setTextColor(0x00, 0x00, 0x00, 0xFF);
src/EditAnimation/gameLoop/Init/initGameScene.cpp:61:    scene->setSceneColor(0xFF, 0xFF, 0xFF, 0xFF);
src/EditAnimation/gameLoop/Init/initGameScene.cpp:62:    scene->createElementToScene("fps", 10, 10, 0, 0, 0);
src/EditAnimation/gameLoop/Init/initGameScene.cpp:63:    scene->writeTexte(-1, "542");
src/EditAnimation/gameLoop/Init/initGameScene.cpp:64:    scene->createElementToScene("pas", 10, 10, 10, 0, 0);
src/EditAnimation/gameLoop/Init/initGameScene.cpp:65:    scene->writeTexte(-1, "1");
src/EditAnimation/gameLoop/Init/initGameScene.cpp:66:    scene->createElementToScene("index", 20, 10, 0, 10, 0);
src/EditAnimation/gameLoop/Init/initGameScene.cpp:67:    scene->writeTexte(-1, "1 / 1");
src/EditAnimation/gameLoop/Init/initGameScene.cpp:69:    scene->createElementToScene("w", 18.75, 10, 0, 90, 0);
src/EditAnimation/gameLoop/Init/initGameScene.cpp:70:    scene->writeTexte(-1, "w=10000");
src/EditAnimation/gameLoop/Init/initGameScene.cpp:71:    scene->createElementToScene("h", 18.75, 10, 18.75, 90, 0);
src/EditAnimation/gameLoop/Init/initGameScene.cpp:72:    scene->writeTexte(-1, "h = 1");
src/EditAnimation/gameLoop/Init/initGameScene.cpp:73:    scene->createElementToScene("x", 18.75, 10, 37.5, 90, 0);
src/EditAnimation/gameLoop/Init/initGameScene.cpp:74:    scene->writeTexte(-1, "x = 1");
src/EditAnimation/gameLoop/Init/initGameScene.cpp:75:    scene->createElementToScene("y", 18.75, 10, 56.25, 90, 0);
src/EditAnimation/gameLoop/Init/initGameScene.cpp:76:    scene->writeTexte(-1, "y = 1");
src/EditAnimation/gameLoop/Init/initAssets.cpp:9:    assetsBank->createAsset(render, "resources/source/assets/BigTree01.png", BigTree01, 30.4, 96, 100, 100, 0, 0);
src/EditAnimation/gameLoop/Init/initAssets.cpp:10:    assetsBank->createAsset(render, "resources/source/assets/BigTree02.png", BigTree02, 18.75, 96, 100, 100, 0, 0);
src/EditAnimation/gameLoop/Init/initAssets.cpp:11:    assetsBank->createAsset(render, "resources/source/assets/BigTree03.png", BigTree03, 25.4, 96, 100, 100, 0, 0);
src/EditAnimation/gameLoop/Init/initAssets.cpp:12:    assetsBank->createAsset(render, "resources/source/assets/BushTree01.png", BushTree01, 10.5, 8.9, 100, 100, 0, 0);
src/EditAnimation/gameLoop/Init/initAssets.cpp:13:    assetsBank->createAsset(render, "resources/source/assets/BushTree02.png", BushTree02, 11, 10, 100, 100, 0, 0);
src/EditAnimation/gameLoop/Init/initAssets.cpp:14:    assetsBank->createAsset(render, "resources/source/assets/BushTree03.png", BushTree03, 9.4, 11.3, 100, 100, 0, 0);
src/EditAnimation/gameLoop/Init/initAssets.cpp:15:    assetsBank->createAsset(render, "resources/source/assets/BushTree04.png", BushTree04, 10.9, 4.2, 100, 100, 0, 0);
src/EditAnimation/gameLoop/Init/initAssets.cpp:16:    assetsBank->createAsset(render, "resources/source/assets/Grass01.png", Grass01, 33.3, 5.3, 100, 100, 0, 0);
src/EditAnimation/gameLoop/Init/initAssets.cpp:17:    assetsBank->createAsset(render, "resources/source/assets/Grass02.png", Grass02, 2.4, 4.1, 100, 100, 0, 0);
src/EditAnimation/gameLoop/Init/initAssets.cpp:18:    assetsBank->createAsset(render, "resources/source/assets/Grass03.png", Grass03, 6.9, 8.2, 100, 100, 0, 0);
src/EditAnimation/gameLoop/Init/initAssets.cpp:19:    assetsBank->createAsset(render, "resources/source/assets/Grass04.png", Grass04, 5.5, 6.2, 100, 100, 0, 0);
src/EditAnimation/gameLoop/Init/initAssets.cpp:20:    assetsBank->createAsset(render, "resources/source/assets/Grass05.png", Grass05, 5.8, 8, 100, 100, 0, 0);
src/EditAnimation/gameLoop/Init/initAssets.cpp:21:    assetsBank->createAsset(render, "resources/source/assets/Ground01.png", Ground01, 10, 5.8, 100, 100, 0, 0);
src/EditAnimation/gameLoop/Init/initAssets.cpp:22:    assetsBank->createAsset(render, "resources/source/assets/MediumTree01.png", MediumTree01, 10, 67.8, 100, 100, 0, 0);
src/EditAnimation/gameLoop/Init/initAssets.cpp:23:    assetsBank->createAsset(render, "resources/source/assets/MediumTree02.png", MediumTree02, 10, 60.4, 100, 100, 0, 0);
src/EditAnimation/gameLoop/Init/initAssets.cpp:24:    assetsBank->createAsset(render, "resources/source/assets/MediumTree03.png", MediumTree03, 4.3, 52.9, 100, 100, 0, 0);
src/EditAnimation/gameLoop/Init/initAssets.cpp:25:    assetsBank->createAsset(render, "resources/source/assets/SmallTree01.png", SmallTree01, 2.8, 36.7, 100, 100, 0, 0);
src/EditAnimation/gameLoop/Init/initAssets.cpp:26:    assetsBank->createAsset(render, "resources/source/assets/SmallTree02.png", SmallTree02, 1.9, 42.2, 100, 100, 0, 0);
src/EditAnimation/gameLoop/Init/initAssets.cpp:27:    assetsBank->createAsset(render, "resources/source/assets/SmallTree03.png", SmallTree03, 3.75, 48, 100, 100, 0, 0);
src/EditAnimation/gameLoop/Init/initAssets.cpp:28:    assetsBank->createAsset(render, "resources/source/assets/SmallTree04.png", SmallTree04, 2.3, 42.6, 100, 100, 0, 0);
src/EditAnimation/gameLoop/Init/initAssets.cpp:39:    assets->loadBank(initAssetsBankLevel1(render));
src/EditAnimation/gameLoop/Management/parallaxManagement.cpp:12:    camera->QueryCameraPosition(x, y);
src/EditAnimation/gameLoop/Management/parallaxManagement.cpp:13:    while (i < parallax->QueryNbLayers())
src/EditAnimation/gameLoop/Management/parallaxManagement.cpp:15:        layer = parallax->QueryLayer(i);
src/EditAnimation/gameLoop/Management/parallaxManagement.cpp:16:        layer->moveLayer(x);
src/EditAnimation/gameLoop/Init/initParallax.cpp:9:    parallax->createLayer(render, "resources/source/FondNeige/FOND2/backgroundlayer0.png", 0.0625, 0);
src/EditAnimation/gameLoop/Init/initParallax.cpp:10:    parallax->createLayer(render, "resources/source/FondNeige/FOND2/backgroundlayer1.png", 0.125, 1);
src/EditAnimation/gameLoop/Init/initParallax.cpp:11:    parallax->createLayer(render, "resources/source/FondNeige/FOND2/backgroundlayer2.png", 0.25, 2);
src/EditAnimation/gameLoop/Init/initParallax.cpp:12:    parallax->createLayer(render, "resources/source/FondNeige/FOND2/backgroundlayer3.png", 0.5, 3);
src/EditAnimation/main.cpp:23:    Tools->getWindowSize(w, h);
src/EditAnimation/main.cpp:26:    initFont.initPolice("resources/alterebro-pixel-font.ttf");
src/EditAnimation/gameLoop/Init/InitMC.cpp:9:    animation->newAnimation(STATIC, true);
src/EditAnimation/gameLoop/Init/InitMC.cpp:10:    animation->loadTexture(render, "resources/source/MainCharacter/Kitsune/MC2staticL.png", "resources/source/MainCharacter/Kitsune/MC2staticR.png");
src/EditAnimation/gameLoop/Init/InitMC.cpp:11:    animation->setSize(40, 40);
src/EditAnimation/gameLoop/Init/InitMC.cpp:12:    animation->cutFrame(5, 5, 1);
src/EditAnimation/gameLoop/Init/InitMC.cpp:13:    animation->setSpeed(0, 0);
src/EditAnimation/gameLoop/Init/InitMC.cpp:14:    animation->setAnimationTime(500);
src/EditAnimation/gameLoop/Init/InitMC.cpp:25:    animation->newAnimation(WALK, true);
src/EditAnimation/gameLoop/Init/InitMC.cpp:26:    animation->loadTexture(render, "resources/source/MainCharacter/Kitsune/MC2HtoFandrunL.png", "resources/source/MainCharacter/Kitsune/MC2HtoFandrunR.png");
src/EditAnimation/gameLoop/Init/InitMC.cpp:27:    animation->setSize(40, 40);
src/EditAnimation/gameLoop/Init/InitMC.cpp:28:    animation->cutFrame(18, 18, 1);
src/EditAnimation/gameLoop/Init/InitMC.cpp:29:    animation->setSpeed(30, 0);
src/EditAnimation/gameLoop/Init/InitMC.cpp:30:    animation->setAnimationTime(1200, 12);
src/EditAnimation/gameLoop/Init/InitMC.cpp:42:    animation->newAnimation(FALL, true);
src/EditAnimation/gameLoop/Init/InitMC.cpp:43:    animation->loadTexture(render, "resources/source/MainCharacter/Moine/MCfallL.png", "resources/source/MainCharacter/Moine/MCfallR.png");
src/EditAnimation/gameLoop/Init/InitMC.cpp:44:    animation->setSize(40, 40);
src/EditAnimation/gameLoop/Init/InitMC.cpp:45:    animation->cutFrame(2, 2, 1);
src/EditAnimation/gameLoop/Init/InitMC.cpp:46:    animation->setSpeed(30, 0);
src/EditAnimation/gameLoop/Init/InitMC.cpp:47:    animation->setAnimationTime(200);
src/EditAnimation/gameLoop/Init/InitMC.cpp:58:    animation->newAnimation(JUMP, true);
src/EditAnimation/gameLoop/Init/InitMC.cpp:59:    animation->loadTexture(render, "resources/source/MainCharacter/Moine/MCjumpL.png", "resources/source/MainCharacter/Moine/MCjumpR.png");
src/EditAnimation/gameLoop/Init/InitMC.cpp:60:    animation->setSize(40, 40);
src/EditAnimation/gameLoop/Init/InitMC.cpp:61:    animation->cutFrame(3, 3, 1);
src/EditAnimation/gameLoop/Init/InitMC.cpp:62:    animation->setSpeed(30, 0);
src/EditAnimation/gameLoop/Init/InitMC.cpp:63:    animation->setAnimationTime(300);
src/EditAnimation/gameLoop/Init/InitMC.cpp:74:    animation->newAnimation(STATIC, true);
src/EditAnimation/gameLoop/Init/InitMC.cpp:75:    animation->loadTexture(render, "resources/source/MainCharacter/Moine/MCstaticL.png", "resources/source/MainCharacter/Moine/MCstaticR.png");
src/EditAnimation/gameLoop/Init/InitMC.cpp:76:    animation->setSize(40, 40);
src/EditAnimation/gameLoop/Init/InitMC.cpp:77:    animation->cutFrame(4, 4, 1);
src/EditAnimation/gameLoop/Init/InitMC.cpp:78:    animation->setSpeed(0, 0);
src/EditAnimation/gameLoop/Init/InitMC.cpp:79:    animation->setAnimationTime(500);
src/EditAnimation/gameLoop/Init/InitMC.cpp:90:    animation->newAnimation(WALK, true);
src/EditAnimation/gameLoop/Init/InitMC.cpp:91:    animation->loadTexture(render, "resources/source/MainCharacter/Moine/MCrunL.png", "resources/source/MainCharacter/Moine/MCrunR.png");
src/EditAnimation/gameLoop/Init/InitMC.cpp:92:    animation->setSize(40, 40);
src/EditAnimation/gameLoop/Init/InitMC.cpp:93:    animation->cutFrame(5, 5, 1);
src/EditAnimation/gameLoop/Init/InitMC.cpp:94:    animation->setSpeed(30, 0);
src/EditAnimation/gameLoop/Init/InitMC.cpp:95:    animation->setAnimationTime(400);
src/EditAnimation/gameLoop/Init/InitMC.cpp:106:    animation->newAnimation(ATTACK, false);
src/EditAnimation/gameLoop/Init/InitMC.cpp:107:    animation->loadTexture(render, "resources/source/MainCharacter/Moine/MCpunchL.png", "resources/source/MainCharacter/Moine/MCpunchR.png");
src/EditAnimation/gameLoop/Init/InitMC.cpp:108:    animation->setSize(40, 40);
src/EditAnimation/gameLoop/Init/InitMC.cpp:109:    animation->cutFrame(3, 3, 1);
src/EditAnimation/gameLoop/Init/InitMC.cpp:110:    animation->setSpeed(0, 0);
src/EditAnimation/gameLoop/Init/InitMC.cpp:111:    animation->setHitBox(0, true, 0.228299, 0.593056, 0.421007, 0.125);
src/EditAnimation/gameLoop/Init/InitMC.cpp:112:    animation->setHitBox(1, true, 0.140625, 0.5625, 0.421007, 0.155556);
src/EditAnimation/gameLoop/Init/InitMC.cpp:113:    animation->setHitBox(2, true, 0.140625, 0.593056, 0.421007, 0.125);
src/EditAnimation/gameLoop/Init/InitMC.cpp:114:    animation->setAnimationTime(300);
src/EditAnimation/gameLoop/Init/InitMC.cpp:125:    physic->setPosX(22.5);
src/EditAnimation/gameLoop/Init/InitMC.cpp:126:    physic->setPosY(30);
src/EditAnimation/gameLoop/Init/InitMC.cpp:137:    MC->setMC(KITSUNE);
src/EditAnimation/gameLoop/Init/InitMC.cpp:138:    MC->addAnimation(render, staticKitsune);
src/EditAnimation/gameLoop/Init/InitMC.cpp:139:    MC->addAnimation(render, walkKitsune);
src/EditAnimation/gameLoop/Init/InitMC.cpp:141:    MC->setMC(MOINE);
src/EditAnimation/gameLoop/Init/InitMC.cpp:142:    MC->addAnimation(render, staticMoine);
src/EditAnimation/gameLoop/Init/InitMC.cpp:143:    MC->addAnimation(render, walkMoine);
src/EditAnimation/gameLoop/Init/InitMC.cpp:144:    MC->addAnimation(render, attackMoine);
src/EditAnimation/gameLoop/Init/InitMC.cpp:145:    MC->addAnimation(render, fallMoine);
src/EditAnimation/gameLoop/Init/InitMC.cpp:146:    MC->addAnimation(render, jumpMoine);
src/EditAnimation/gameLoop/Init/InitMC.cpp:148:    MC->loadAnimation(STATIC);
src/EditAnimation/gameLoop/Init/InitMC.cpp:149:    MC->loadPhysic(initPhysic());
src/Game/infiniteLoop/Cinematics/home.cpp:8:    scene->loadRenderer(render);
src/Game/infiniteLoop/Cinematics/home.cpp:10:    scene->setSceneColor(0x00, 0x00, 0x00, 255);
src/Game/infiniteLoop/Cinematics/home.cpp:11:    scene->createElementToScene("filtre", 100, 100, 0, 0, 0);
src/Game/infiniteLoop/Cinematics/home.cpp:13:    scene->createElementToSceneFromPng("Background", "resources/source/HomeJeu.png", 100, 90, 0, 5, 0);
src/Game/infiniteLoop/Cinematics/home.cpp:22:    scene->loadRenderer(render);
src/Game/infiniteLoop/Cinematics/home.cpp:24:    scene->setSceneColor(0x00, 0x00, 0x00, alpha);
src/Game/infiniteLoop/Cinematics/home.cpp:25:    scene->createElementToScene("filtre", 100, 100, 0, 0, 40);
src/Game/infiniteLoop/Cinematics/home.cpp:43:    scene = initHomeCinematics(render->QueryRender());
src/Game/infiniteLoop/Cinematics/home.cpp:50:        fondu = initFondu(render->QueryRender(), alpha);
src/Game/infiniteLoop/Cinematics/home.cpp:51:        alpha -= 5;
src/Game/infiniteLoop/Cinematics/home.cpp:57:        render->renderScene(scene);
src/Game/infiniteLoop/Cinematics/home.cpp:58:        render->renderScene(fondu);
src/Game/infiniteLoop/Cinematics/home.cpp:59:        render->dispScreen();
src/Game/infiniteLoop/Cinematics/home.cpp:61:        SDL_Delay(fmax(0, (1000 / (float)60 - timer.get_ticks())));
src/Game/infiniteLoop/Cinematics/logo.cpp:8:    scene->loadRenderer(render);
src/Game/infiniteLoop/Cinematics/logo.cpp:10:    scene->createElementToSceneFromPng("Background", "resources/source/Cinematics/logoJeu.png", 100, 100, 0, 0, 0);
src/Game/infiniteLoop/Cinematics/logo.cpp:20:    scene->loadRenderer(render);
src/Game/infiniteLoop/Cinematics/logo.cpp:22:    scene->setSceneColor(0x00, 0x00, 0x00, alpha);
src/Game/infiniteLoop/Cinematics/logo.cpp:23:    scene->createElementToScene("filtre", 100, 100, 0, 0, 40);
src/Game/infiniteLoop/Cinematics/logo.cpp:33:    scene->loadRenderer(render);
src/Game/infiniteLoop/Cinematics/logo.cpp:35:    scene->setSceneColor(0x00, 0x00, 0x00, 255);
src/Game/infiniteLoop/Cinematics/logo.cpp:36:    scene->createElementToScene("filtre", 100, 100, 0, 0, 40);
src/Game/infiniteLoop/Cinematics/logo.cpp:51:    scene = initLogoCinematics(render->QueryRender());
src/Game/infiniteLoop/Cinematics/logo.cpp:62:        render->renderScene(scene);
src/Game/infiniteLoop/Cinematics/logo.cpp:63:        render->dispScreen();
src/Game/infiniteLoop/Cinematics/logo.cpp:65:        SDL_Delay(fmax(0, (1000 / (float)60 - timer.get_ticks())));
src/Game/infiniteLoop/Cinematics/logo.cpp:78:        fondu = initFondu(render->QueryRender(), alpha);
src/Game/infiniteLoop/Cinematics/logo.cpp:85:        render->renderScene(scene);
src/Game/infiniteLoop/Cinematics/logo.cpp:86:        render->renderScene(fondu);
src/Game/infiniteLoop/Cinematics/logo.cpp:87:        render->dispScreen();
src/Game/infiniteLoop/Cinematics/logo.cpp:91:        SDL_Delay(fmax(0, (1000 / (float)60 - timer.get_ticks())));
src/Game/infiniteLoop/Cinematics/logo.cpp:96:    scene = blackScreen(render->QueryRender());
src/Game/infiniteLoop/Cinematics/logo.cpp:106:        render->renderScene(scene);
src/Game/infiniteLoop/Cinematics/logo.cpp:107:        render->dispScreen();
src/Game/infiniteLoop/Cinematics/logo.cpp:109:        SDL_Delay(fmax(0, (1000 / (float)60 - timer.get_ticks())));
src/Game/infiniteLoop/BasicManagement/eventProcessing.cpp:7:    action->escape = actionTable->escape;
src/Game/infiniteLoop/BasicManagement/eventProcessing.cpp:8:    action->att = actionTable->att;
src/EditAssets/main.cpp:33:        if (value->up == key)
src/EditAssets/main.cpp:34:            table->up = true;
src/EditAssets/main.cpp:35:        else if (value->down == key)
src/EditAssets/main.cpp:36:            table->down = true;
src/EditAssets/main.cpp:37:        else if (value->right == key)
src/EditAssets/main.cpp:38:            table->right = true;
src/EditAssets/main.cpp:39:        else if (value->left == key)
src/EditAssets/main.cpp:40:            table->left = true;
src/EditAssets/main.cpp:41:        else if (value->jump == key)
src/EditAssets/main.cpp:42:            table->jump = true;
src/EditAssets/main.cpp:43:        else if (value->dodge == key)
src/EditAssets/main.cpp:44:            table->dodge = true;
src/EditAssets/main.cpp:45:        else if (value->att == key)
src/EditAssets/main.cpp:46:            table->att = true;
src/EditAssets/main.cpp:47:        else if (value->att_sp == key)
src/EditAssets/main.cpp:48:            table->att_sp = true;
src/EditAssets/main.cpp:49:        else if (value->use == key)
src/EditAssets/main.cpp:50:            table->use = true;
src/EditAssets/main.cpp:51:        else if (value->spell_1 == key)
src/EditAssets/main.cpp:52:            table->spell_1 = true;
src/EditAssets/main.cpp:53:        else if (value->spell_2 == key)
src/EditAssets/main.cpp:54:            table->spell_2 = true;
src/EditAssets/main.cpp:58:        if (value->up == key)
src/EditAssets/main.cpp:59:            table->up = false;
src/EditAssets/main.cpp:60:        else if (value->down == key)
src/EditAssets/main.cpp:61:            table->down = false;
src/EditAssets/main.cpp:62:        else if (value->right == key)
src/EditAssets/main.cpp:63:            table->right = false;
src/EditAssets/main.cpp:64:        else if (value->left == key)
src/EditAssets/main.cpp:65:            table->left = false;
src/EditAssets/main.cpp:66:        else if (value->jump == key)
src/EditAssets/main.cpp:67:            table->jump = false;
src/EditAssets/main.cpp:68:        else if (value->dodge == key)
src/EditAssets/main.cpp:69:            table->dodge = false;
src/EditAssets/main.cpp:70:        else if (value->att == key)
src/EditAssets/main.cpp:71:            table->att = false;
src/EditAssets/main.cpp:72:        else if (value->att_sp == key)
src/EditAssets/main.cpp:73:            table->att_sp = false;
src/EditAssets/main.cpp:74:        else if (value->use == key)
src/EditAssets/main.cpp:75:            table->use = false;
src/EditAssets/main.cpp:76:        else if (value->spell_1 == key)
src/EditAssets/main.cpp:77:            table->spell_1 = false;
src/EditAssets/main.cpp:78:        else if (value->spell_2 == key)
src/EditAssets/main.cpp:79:            table->spell_2 = false;
src/EditAssets/main.cpp:87:    value->up = SDLK_z;
src/EditAssets/main.cpp:88:    value->down = SDLK_s;
src/EditAssets/main.cpp:89:    value->right = SDLK_d;
src/EditAssets/main.cpp:90:    value->left = SDLK_q;
src/EditAssets/main.cpp:91:    value->jump = SDLK_SPACE;
src/EditAssets/main.cpp:92:    value->dodge = SDLK_LSHIFT;
src/EditAssets/main.cpp:93:    value->att = -1;
src/EditAssets/main.cpp:94:    value->att_sp = -1;
src/EditAssets/main.cpp:95:    value->use = SDLK_f;
src/EditAssets/main.cpp:96:    value->spell_1 = SDLK_a;
src/EditAssets/main.cpp:97:    value->spell_2 = SDLK_e;
src/EditAssets/main.cpp:102:    table->up = false;
src/EditAssets/main.cpp:103:    table->down = false;
src/EditAssets/main.cpp:104:    table->right = false;
src/EditAssets/main.cpp:105:    table->left = false;
src/EditAssets/main.cpp:106:    table->jump = false;
src/EditAssets/main.cpp:107:    table->dodge = false;
src/EditAssets/main.cpp:108:    table->att = false;
src/EditAssets/main.cpp:109:    table->att_sp = false;
src/EditAssets/main.cpp:110:    table->use = false;
src/EditAssets/main.cpp:111:    table->spell_1 = false;
src/EditAssets/main.cpp:112:    table->spell_2 = false;
src/EditAssets/main.cpp:119:    if (table->right & !table->left)
src/EditAssets/main.cpp:120:        filtre->right = true;
src/EditAssets/main.cpp:121:    if (table->left & !table->right)
src/EditAssets/main.cpp:122:        filtre->left = true;
src/EditAssets/main.cpp:124:    if (table->up & !table->down)
src/EditAssets/main.cpp:125:        filtre->up = true;
src/EditAssets/main.cpp:126:    if (table->down & !table->up)
src/EditAssets/main.cpp:127:        filtre->down = true;
src/EditAssets/main.cpp:129:    filtre->dodge = table->dodge;
src/EditAssets/main.cpp:130:    filtre->jump = table->jump;
src/EditAssets/main.cpp:140:    camera = settings.QueryGameScene()->QueryCamera();
src/EditAssets/main.cpp:141:    asset = settings.QueryGameScene()->QueryAssets()->QueryAsset(0);
src/EditAssets/main.cpp:142:    hitBox = asset->QueryHitBox();
src/EditAssets/main.cpp:143:    if (table->dodge == false)
src/EditAssets/main.cpp:145:        if (table->right == true)
src/EditAssets/main.cpp:146:            hitBox->extandW(1);
src/EditAssets/main.cpp:147:        else if (table->left == true)
src/EditAssets/main.cpp:148:            hitBox->extandW(-1);
src/EditAssets/main.cpp:149:        else if (table->up == true)
src/EditAssets/main.cpp:150:            hitBox->extandH(-1);
src/EditAssets/main.cpp:151:        else if (table->down)
src/EditAssets/main.cpp:152:            hitBox->extandH(1);
src/EditAssets/main.cpp:156:        if (table->right == true)
src/EditAssets/main.cpp:157:            hitBox->moveX(1);
src/EditAssets/main.cpp:158:        else if (table->left == true)
src/EditAssets/main.cpp:159:            hitBox->moveX(-1);
src/EditAssets/main.cpp:160:        else if (table->up == true)
src/EditAssets/main.cpp:161:            hitBox->moveY(-1);
src/EditAssets/main.cpp:162:        else if (table->down)
src/EditAssets/main.cpp:163:            hitBox->moveY(1);
src/EditAssets/main.cpp:168:    if (table->jump)
src/EditAssets/main.cpp:171:            asset->printSize();
src/EditAssets/main.cpp:202:    parallax = settings.QueryGameScene()->QueryParallax();
src/EditAssets/main.cpp:204:    while (i < parallax->QueryNbLayers())
src/EditAssets/main.cpp:206:        layer = parallax->QueryLayer(i);
src/EditAssets/main.cpp:207:        layer->moveLayer(xCamera);
src/EditAssets/main.cpp:221:    camera = settings.QueryGameScene()->QueryCamera();
src/EditAssets/main.cpp:232:        camera->QueryCameraPosition(xCamera, yCamera);
src/EditAssets/main.cpp:237:        SDL_Delay(fmax(0, (1000 / 30) - timer.get_ticks()));
src/EditAssets/main.cpp:255:    parallax->createLayer(render, "resources/source/FondNeige/FOND2/backgroundlayer0.png", 0.0625, 0);
src/EditAssets/main.cpp:256:    parallax->createLayer(render, "resources/source/FondNeige/FOND2/backgroundlayer1.png", 0.125, 1);
src/EditAssets/main.cpp:257:    parallax->createLayer(render, "resources/source/FondNeige/FOND2/backgroundlayer2.png", 0.25, 2);
src/EditAssets/main.cpp:258:    parallax->createLayer(render, "resources/source/FondNeige/FOND2/backgroundlayer3.png", 0.5, 3);
src/EditAssets/main.cpp:329:    assetsBank->createAsset(render, "resources/source/assets/BigTree01.png", BigTree01, 30.4, 96, 100, 100, 0, 0);
src/EditAssets/main.cpp:330:    assetsBank->createAsset(render, "resources/source/assets/BigTree02.png", BigTree02, 18.75, 96, 100, 100, 0, 0);
src/EditAssets/main.cpp:331:    assetsBank->createAsset(render, "resources/source/assets/BigTree03.png", BigTree03, 25.4, 96, 100, 100, 0, 0);
src/EditAssets/main.cpp:332:    assetsBank->createAsset(render, "resources/source/assets/BushTree01.png", BushTree01, 10.5, 8.9, 100, 100, 0, 0);
src/EditAssets/main.cpp:333:    assetsBank->createAsset(render, "resources/source/assets/BushTree02.png", BushTree02, 11, 10, 100, 100, 0, 0);
src/EditAssets/main.cpp:334:    assetsBank->createAsset(render, "resources/source/assets/BushTree03.png", BushTree03, 9.4, 11.3, 100, 100, 0, 0);
src/EditAssets/main.cpp:335:    assetsBank->createAsset(render, "resources/source/assets/BushTree04.png", BushTree04, 10.9, 4.2, 100, 100, 0, 0);
src/EditAssets/main.cpp:336:    assetsBank->createAsset(render, "resources/source/assets/Grass01.png", Grass01, 33.3, 5.3, 100, 100, 0, 0);
src/EditAssets/main.cpp:337:    assetsBank->createAsset(render, "resources/source/assets/Grass02.png", Grass02, 2.4, 4.1, 100, 100, 0, 0);
src/EditAssets/main.cpp:338:    assetsBank->createAsset(render, "resources/source/assets/Grass03.png", Grass03, 6.9, 8.2, 100, 100, 0, 0);
src/EditAssets/main.cpp:339:    assetsBank->createAsset(render, "resources/source/assets/Grass04.png", Grass04, 5.5, 6.2, 100, 100, 0, 0);
src/EditAssets/main.cpp:340:    assetsBank->createAsset(render, "resources/source/assets/Grass05.png", Grass05, 5.8, 8, 100, 100, 0, 0);
src/EditAssets/main.cpp:341:    assetsBank->createAsset(render, "resources/source/assets/Ground01.png", Ground01, 10, 5.8, 100, 100, 0, 0);
src/EditAssets/main.cpp:342:    assetsBank->createAsset(render, "resources/source/assets/MediumTree01.png", MediumTree01, 10, 67.8, 100, 100, 0, 0);
src/EditAssets/main.cpp:343:    assetsBank->createAsset(render, "resources/source/assets/MediumTree02.png", MediumTree02, 10, 60.4, 100, 100, 0, 0);
src/EditAssets/main.cpp:344:    assetsBank->createAsset(render, "resources/source/assets/MediumTree03.png", MediumTree03, 4.3, 52.9, 100, 100, 0, 0);
src/EditAssets/main.cpp:345:    assetsBank->createAsset(render, "resources/source/assets/SmallTree01.png", SmallTree01, 2.8, 36.7, 100, 100, 0, 0);
src/EditAssets/main.cpp:346:    assetsBank->createAsset(render, "resources/source/assets/SmallTree02.png", SmallTree02, 1.9, 42.2, 100, 100, 0, 0);
src/EditAssets/main.cpp:347:    assetsBank->createAsset(render, "resources/source/assets/SmallTree03.png", SmallTree03, 3.75, 48, 100, 100, 0, 0);
src/EditAssets/main.cpp:348:    assetsBank->createAsset(render, "resources/source/assets/SmallTree04.png", SmallTree04, 2.3, 42.6, 100, 100, 0, 0);
src/EditAssets/main.cpp:359:    assets->loadBank(initAssetsBankLevel1(render));
src/EditAssets/main.cpp:361:    assets->loadAsset(BigTree01, 1, XBigTree02, YBigTree01);
src/EditAssets/main.cpp:362:    //assets->loadAsset(BigTree02, 1, XBigTree02, YBigTree02);
src/EditAssets/main.cpp:363:    //assets->loadAsset(BigTree03, 1, XBigTree03, YBigTree03);
src/EditAssets/main.cpp:364:    //assets->loadAsset(BushTree01, 1, XBushTree01, YBushTree01);
src/EditAssets/main.cpp:365:    //assets->loadAsset(BushTree02, 1, XBushTree02, YBushTree02);
src/EditAssets/main.cpp:366:    //assets->loadAsset(BushTree03, 1, XBushTree03, YBushTree03);
src/EditAssets/main.cpp:367:    //assets->loadAsset(BushTree04, 1, XBushTree04, YBushTree04);
src/EditAssets/main.cpp:368:    //assets->loadAsset(Grass01, 1, XGrass01, YGrass01);
src/EditAssets/main.cpp:369:    //assets->loadAsset(Grass02, 1, XGrass02, YGrass02);
src/EditAssets/main.cpp:370:    //assets->loadAsset(Grass03, 1, XGrass03, YGrass03);
src/EditAssets/main.cpp:371:    //assets->loadAsset(Grass04, 1, XGrass04, YGrass04);
src/EditAssets/main.cpp:372:    //assets->loadAsset(Grass05, 1, XGrass05, YGrass05);
src/EditAssets/main.cpp:373:    //assets->loadAsset(MediumTree01, 1, XMediumTree01, YMediumTree01);
src/EditAssets/main.cpp:374:    //assets->loadAsset(MediumTree02, 1, XMediumTree02, YMediumTree02);
src/EditAssets/main.cpp:375:    //assets->loadAsset(MediumTree03, 1, XMediumTree03, YMediumTree03);
src/EditAssets/main.cpp:376:    //assets->loadAsset(SmallTree01, 1, XSmallTree01, YSmallTree01);
src/EditAssets/main.cpp:377:    //assets->loadAsset(SmallTree02, 1, XSmallTree02, YSmallTree02);
src/EditAssets/main.cpp:378:    //assets->loadAsset(SmallTree03, 1, XSmallTree03, YSmallTree03);
src/EditAssets/main.cpp:379:    //assets->loadAsset(SmallTree04, 1, XSmallTree04, YSmallTree04);
src/EditAssets/main.cpp:381:    assets->loadAsset(Ground01, 1, 0, 96);
src/EditAssets/main.cpp:382:    assets->loadAsset(Ground01, 1, 10, 96);
src/EditAssets/main.cpp:383:    assets->loadAsset(Ground01, 1, 20, 96);
src/EditAssets/main.cpp:384:    assets->loadAsset(Ground01, 1, 30, 96);
src/EditAssets/main.cpp:385:    assets->loadAsset(Ground01, 1, 40, 96);
src/EditAssets/main.cpp:386:    assets->loadAsset(Ground01, 1, 50, 96);
src/EditAssets/main.cpp:387:    assets->loadAsset(Ground01, 1, 60, 96);
src/EditAssets/main.cpp:388:    assets->loadAsset(Ground01, 1, 70, 96);
src/EditAssets/main.cpp:389:    assets->loadAsset(Ground01, 1, 80, 96);
src/EditAssets/main.cpp:390:    assets->loadAsset(Ground01, 1, 90, 96);
src/EditAssets/main.cpp:400:    scene->loadRenderer(render);
src/EditAssets/main.cpp:402:    scene->loadParallax(initParallax(render));
src/EditAssets/main.cpp:403:    scene->loadAssets(initAssets(render));
src/EditAssets/main.cpp:404:    scene->loadCamera(initCamera());
src/EditAssets/main.cpp:420:    Tools->getWindowSize(settings.QueryWindowsWidth(), settings.QueryWindowsHeight());
src/EditAssets/main.cpp:441:    initFont.initPolice("resources/alterebro-pixel-font.ttf");
src/Game/infiniteLoop/BasicManagement/callDialogueBox.cpp:5:    render->saveScreen();
src/Game/infiniteLoop/MenuLoop/loop.cpp:9:    int                         answer = -1;
src/Game/infiniteLoop/MenuLoop/loop.cpp:13:    scene = initMenu(render->QueryRender()); //initHomeKey
src/Game/infiniteLoop/MenuLoop/loop.cpp:15:    while (answer == -1)
src/Game/infiniteLoop/MenuLoop/loop.cpp:23:        render->renderScreenSave();
src/Game/infiniteLoop/MenuLoop/loop.cpp:24:        render->renderScene(scene);
src/Game/infiniteLoop/MenuLoop/loop.cpp:25:        render->dispScreen();
src/Game/infiniteLoop/MenuLoop/loop.cpp:27:        SDL_Delay(fmax(0, (1000 / (float)60 - timer.get_ticks())));
src/Game/infiniteLoop/MenuLoop/loop.cpp:34:                answer = -1;
src/Game/infiniteLoop/MenuLoop/UseEvent.cpp:13:        return (-1);
src/Game/infiniteLoop/MenuLoop/init.cpp:8:    scene->loadRenderer(render);
src/Game/infiniteLoop/MenuLoop/init.cpp:10:    scene->setSceneColor(0x00, 0x00, 0x00, 175);
src/Game/infiniteLoop/MenuLoop/init.cpp:11:    scene->createElementToScene("filtre", 100, 100, 0, 0, 0);
src/Game/infiniteLoop/MenuLoop/init.cpp:13:    scene->setSceneColor(0xA9, 0xA9, 0xA9, 0);
src/Game/infiniteLoop/MenuLoop/init.cpp:14:    scene->setTextColor(0xFF, 0xFF, 0xFF, 0xFF);
src/Game/infiniteLoop/MenuLoop/init.cpp:16:    scene->createButtonToScene("Continue", 30, 12, 35, 27, 5, &returnFalse);
src/Game/infiniteLoop/MenuLoop/init.cpp:17:    scene->writeTexte(-1, "Continue");
src/Game/infiniteLoop/MenuLoop/init.cpp:19:    scene->createButtonToScene("Credits", 30, 12, 35, 44, 5, &returnTrue);
src/Game/infiniteLoop/MenuLoop/init.cpp:20:    scene->writeTexte(-1, "Credits");
src/Game/infiniteLoop/MenuLoop/init.cpp:22:    scene->createButtonToScene("Save", 30, 12, 35, 61, 5, &returnTrue);
src/Game/infiniteLoop/MenuLoop/init.cpp:23:    scene->writeTexte(-1, "Save & exit");
src/Game/infiniteLoop/gameLoop/UseEvent.cpp:7:        timer->pause();
src/Game/infiniteLoop/gameLoop/UseEvent.cpp:8:        render->saveScreen();
src/Game/infiniteLoop/gameLoop/UseEvent.cpp:11:            timer->unpause();
src/Game/infiniteLoop/gameLoop/UseEvent.cpp:16:            timer->unpause();
src/Game/infiniteLoop/gameLoop/UseEvent.cpp:26:    if (MC->verifyOnGround())
src/Game/infiniteLoop/gameLoop/UseEvent.cpp:28:        MC->loadAnimation(WALK);
src/Game/infiniteLoop/gameLoop/UseEvent.cpp:32:        if (MC->QueryPhysic()->QuerySpeedY() < 0)
src/Game/infiniteLoop/gameLoop/UseEvent.cpp:33:            MC->loadAnimation(JUMP);
src/Game/infiniteLoop/gameLoop/UseEvent.cpp:35:            MC->loadAnimation(FALL);
src/Game/infiniteLoop/gameLoop/UseEvent.cpp:42:    if (MC->verifyAnimationEnd())
src/Game/infiniteLoop/gameLoop/UseEvent.cpp:44:        if (table->jump & KeyPress)
src/Game/infiniteLoop/gameLoop/UseEvent.cpp:45:            MC->useJump();
src/Game/infiniteLoop/gameLoop/UseEvent.cpp:46:        else if (table->att & KeyPress)
src/Game/infiniteLoop/gameLoop/UseEvent.cpp:47:            MC->loadAnimation(ATTACK);
src/Game/infiniteLoop/gameLoop/UseEvent.cpp:48:        else if (table->dodge & KeyPress)
src/Game/infiniteLoop/gameLoop/UseEvent.cpp:49:            MC->swapMC();
src/Game/infiniteLoop/gameLoop/UseEvent.cpp:50:        else if (table->right & KeyHoldPress || table->left & KeyHoldPress)
src/Game/infiniteLoop/gameLoop/UseEvent.cpp:53:            MC->loadAnimation(STATIC);
src/Game/infiniteLoop/gameLoop/UseEvent.cpp:55:    if (table->left & KeyHoldPress)
src/Game/infiniteLoop/gameLoop/UseEvent.cpp:56:        MC->setRight(false);
src/Game/infiniteLoop/gameLoop/UseEvent.cpp:57:    if (table->right & KeyHoldPress)
src/Game/infiniteLoop/gameLoop/UseEvent.cpp:58:        MC->setRight(true);
src/Game/infiniteLoop/gameLoop/loop.cpp:18:    action->escape = actionTable->escape;
src/Game/infiniteLoop/gameLoop/loop.cpp:19:    action->att = actionTable->att;
src/Game/infiniteLoop/gameLoop/loop.cpp:20:    if ((actionTable->right & KeyHoldPress) && (actionTable->left & KeyReleaseNoPress))
src/Game/infiniteLoop/gameLoop/loop.cpp:21:        action->right = actionTable->right;
src/Game/infiniteLoop/gameLoop/loop.cpp:22:    if ((actionTable->left & KeyHoldPress) && (actionTable->right & KeyReleaseNoPress))
src/Game/infiniteLoop/gameLoop/loop.cpp:23:        action->left = actionTable->left;
src/Game/infiniteLoop/gameLoop/loop.cpp:24:    action->dodge = actionTable->dodge;
src/Game/infiniteLoop/gameLoop/loop.cpp:25:    action->jump = actionTable->jump;
src/Game/infiniteLoop/gameLoop/loop.cpp:30:    camera->moveCamera(Tools->QueryWindowWidth(), 0);
src/Game/infiniteLoop/gameLoop/loop.cpp:41:    scene = initGameScene(render->QueryRender());
src/Game/infiniteLoop/gameLoop/loop.cpp:47:    MC = scene->QueryMC();
src/Game/infiniteLoop/gameLoop/loop.cpp:64:        MC->updateFrame(deltaTMS);
src/Game/infiniteLoop/gameLoop/loop.cpp:67:        MC->moveCharacter(deltaTMS, -100000, 100000);
src/Game/infiniteLoop/gameLoop/loop.cpp:68:        MC->getFrame();
src/Game/infiniteLoop/gameLoop/loop.cpp:70:        scene->QueryEnemies()->updateEnemies(MC, deltaTMS);
src/Game/infiniteLoop/gameLoop/loop.cpp:72:        parallaxManagement(scene->QueryParallax(), scene->QueryCamera());
src/Game/infiniteLoop/gameLoop/loop.cpp:74:        render->renderGameScene(scene);
src/Game/infiniteLoop/gameLoop/loop.cpp:75:        render->dispScreen();
src/Game/infiniteLoop/gameLoop/loop.cpp:77:        wait = fmax(0, (1000 / (float)60 - timer.get_ticks()));
src/Game/infiniteLoop/gameLoop/Init/InitEnemies/initEnemies.cpp:9:    enemies->loadEnemyBank(initBankEnemies(render));
src/Game/infiniteLoop/gameLoop/Init/InitEnemies/initEnemies.cpp:10:    enemies->addAnEnemy(10, 10, Enfant1);
src/Game/infiniteLoop/gameLoop/Init/InitEnemies/enfant1.cpp:9:    animation->newAnimation(WALK, true);
src/Game/infiniteLoop/gameLoop/Init/InitEnemies/enfant1.cpp:10:    animation->loadTexture(render, "resources/source/Enemies/Enfant1/BonhommeNoirRin1L.png", "resources/source/Enemies/Enfant1/BonhommeNoirRin1R.png");
src/Game/infiniteLoop/gameLoop/Init/InitEnemies/enfant1.cpp:11:    animation->setSize(20, 20);
src/Game/infiniteLoop/gameLoop/Init/InitEnemies/enfant1.cpp:12:    animation->cutFrame(5, 5, 1);
src/Game/infiniteLoop/gameLoop/Init/InitEnemies/enfant1.cpp:13:    animation->setSpeed(0.03, 0);
src/Game/infiniteLoop/gameLoop/Init/InitEnemies/enfant1.cpp:14:    animation->setAnimationTime(500);
src/Game/infiniteLoop/gameLoop/Init/InitEnemies/enfant1.cpp:25:    bank->addAnimation(render, walkEnfant1);
src/Game/infiniteLoop/gameLoop/Init/InitEnemies/enfant1.cpp:35:    MC->QueryPos(xMC, YMC);
src/Game/infiniteLoop/gameLoop/Init/InitEnemies/enfant1.cpp:40:    physic->QueryPostion(xEnemy, yEnemy);
src/Game/infiniteLoop/gameLoop/Init/InitEnemies/enfant1.cpp:54:    enemy->initEnemyAnimationBank(initBankAnimation(render));
src/Game/infiniteLoop/gameLoop/Init/InitEnemies/enfant1.cpp:55:    enemy->initAlgo(initAlgoEnfant1);
src/Game/infiniteLoop/gameLoop/Init/InitEnemies/enfant1.cpp:56:    enemy->setName(Enfant1);
src/Game/infiniteLoop/gameLoop/Init/InitEnemies/InitBank.cpp:9:    bank->addEnemy(initEnfant1(render));
src/Game/infiniteLoop/gameLoop/Init/initParallax.cpp:9:    parallax->createLayer(render, "resources/source/FondNeige/FOND1/backgroundlayer0.png", 0.0625, 0);
src/Game/infiniteLoop/gameLoop/Init/initParallax.cpp:10:    parallax->createLayer(render, "resources/source/FondNeige/FOND1/backgroundlayer1.png", 0.125, 1);
src/Game/infiniteLoop/gameLoop/Init/initParallax.cpp:11:    parallax->createLayer(render, "resources/source/FondNeige/FOND1/backgroundlayer2.png", 0.25, 2);
src/Game/infiniteLoop/gameLoop/Init/initParallax.cpp:12:    parallax->createLayer(render, "resources/source/FondNeige/FOND1/backgroundlayer3.png", 0.5, 3);
src/Game/infiniteLoop/gameLoop/Init/initGameScene.cpp:8:    scene->loadRenderer(render);
src/Game/infiniteLoop/gameLoop/Init/initGameScene.cpp:10:    scene->setBorneMap(-100000, 100000);
src/Game/infiniteLoop/gameLoop/Init/initGameScene.cpp:11:    scene->loadMC(initMC(render));
src/Game/infiniteLoop/gameLoop/Init/initGameScene.cpp:12:    scene->loadEnemies(initEnemies(render));
src/Game/infiniteLoop/gameLoop/Init/initGameScene.cpp:13:    scene->loadParallax(initParallax(render));
src/Game/infiniteLoop/gameLoop/Init/initGameScene.cpp:14:    scene->loadCamera(initCamera());
src/Game/infiniteLoop/gameLoop/Init/initGameScene.cpp:15:    scene->loadAssets(initAssets(render));
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:9:    animation->newAnimation(STATIC, true);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:10:    animation->loadTexture(render, "resources/source/MainCharacter/Kitsune/MC2staticL.png", "resources/source/MainCharacter/Kitsune/MC2staticR.png");
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:11:    animation->setSize(20, 20);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:12:    animation->cutFrame(5, 5, 1);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:13:    animation->setSpeed(0, 0);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:14:    animation->setAnimationTime(500);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:25:    animation->newAnimation(WALK, true);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:26:    animation->loadTexture(render, "resources/source/MainCharacter/Kitsune/MC2HtoFandrunL.png", "resources/source/MainCharacter/Kitsune/MC2HtoFandrunR.png");
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:27:    animation->setSize(20, 20);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:28:    animation->cutFrame(18, 18, 1);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:29:    animation->setSpeed(0.03, 0);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:30:    animation->setAnimationTime(1200, 12);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:42:    animation->newAnimation(FALL, true);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:43:    animation->loadTexture(render, "resources/source/MainCharacter/Moine/MCfallL.png", "resources/source/MainCharacter/Moine/MCfallR.png");
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:44:    animation->setSize(20, 20);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:45:    animation->cutFrame(2, 2, 1);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:46:    animation->setSpeed(0.03, 0);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:47:    animation->setAnimationTime(200);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:58:    animation->newAnimation(JUMP, true);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:59:    animation->loadTexture(render, "resources/source/MainCharacter/Moine/MCjumpL.png", "resources/source/MainCharacter/Moine/MCjumpR.png");
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:60:    animation->setSize(20, 20);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:61:    animation->cutFrame(3, 3, 1);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:62:    animation->setSpeed(0.03, 0);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:63:    animation->setAnimationTime(300);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:74:    animation->newAnimation(STATIC, true);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:75:    animation->loadTexture(render, "resources/source/MainCharacter/Moine/MCstaticL.png", "resources/source/MainCharacter/Moine/MCstaticR.png");
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:76:    animation->setSize(20, 20);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:77:    animation->cutFrame(4, 4, 1);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:78:    animation->setSpeed(0, 0);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:79:    animation->setAnimationTime(500);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:81:    animation->setHitBox(0, true, 0.138889, 0.594444, 0.421875, 0.125);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:82:    animation->setHitBox(1, true, 0.138889, 0.563889, 0.421875, 0.155556);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:83:    animation->setHitBox(2, true, 0.138889, 0.533333, 0.421875, 0.186111);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:84:    animation->setHitBox(3, true, 0.138889, 0.563889, 0.421875, 0.155556);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:86:    animation->setHitBox(0, false, 0.138889, 0.594444, 0.439236, 0.125);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:87:    animation->setHitBox(1, false, 0.138889, 0.563889, 0.439236, 0.155556);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:88:    animation->setHitBox(2, false, 0.138889, 0.533333, 0.439236, 0.186111);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:89:    animation->setHitBox(3, false, 0.138889, 0.563889, 0.439236, 0.155556);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:100:    animation->newAnimation(WALK, true);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:101:    animation->loadTexture(render, "resources/source/MainCharacter/Moine/MCrunL.png", "resources/source/MainCharacter/Moine/MCrunR.png");
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:102:    animation->setSize(20, 20);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:103:    animation->cutFrame(5, 5, 1);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:104:    animation->setSpeed(0.03, 0);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:105:    animation->setAnimationTime(400);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:116:    animation->newAnimation(ATTACK, false);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:117:    animation->loadTexture(render, "resources/source/MainCharacter/Moine/MCpunchL.png", "resources/source/MainCharacter/Moine/MCpunchR.png");
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:118:    animation->setSize(20, 20);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:119:    animation->cutFrame(3, 3, 1);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:120:    animation->setSpeed(0, 0);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:121:    animation->setAnimationTime(300);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:132:    physic->setPosX(60);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:133:    physic->setPosY(0);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:144:    MC->setMC(KITSUNE);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:145:    MC->addAnimation(render, staticKitsune);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:146:    MC->addAnimation(render, walkKitsune);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:148:    MC->setMC(MOINE);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:149:    MC->addAnimation(render, staticMoine);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:150:    MC->addAnimation(render, walkMoine);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:151:    MC->addAnimation(render, attackMoine);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:152:    MC->addAnimation(render, fallMoine);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:153:    MC->addAnimation(render, jumpMoine);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:155:    MC->loadAnimation(STATIC);
src/Game/infiniteLoop/gameLoop/Init/InitMC.cpp:156:    MC->loadPhysic(initPhysic());
src/Game/infiniteLoop/gameLoop/Init/initAssets.cpp:9:    assetsBank->createAsset(render, "resources/source/assets/BigTree01.png", BigTree01, 30.4, 96, 100, 100, 0, 0);
src/Game/infiniteLoop/gameLoop/Init/initAssets.cpp:10:    assetsBank->createAsset(render, "resources/source/assets/BigTree02.png", BigTree02, 18.75, 96, 100, 100, 0, 0);
src/Game/infiniteLoop/gameLoop/Init/initAssets.cpp:11:    assetsBank->createAsset(render, "resources/source/assets/BigTree03.png", BigTree03, 25.4, 96, 100, 100, 0, 0);
src/Game/infiniteLoop/gameLoop/Init/initAssets.cpp:12:    assetsBank->createAsset(render, "resources/source/assets/BushTree01.png", BushTree01, 10.5, 8.9, 100, 100, 0, 0);
src/Game/infiniteLoop/gameLoop/Init/initAssets.cpp:13:    assetsBank->createAsset(render, "resources/source/assets/BushTree02.png", BushTree02, 11, 10, 100, 100, 0, 0);
src/Game/infiniteLoop/gameLoop/Init/initAssets.cpp:14:    assetsBank->createAsset(render, "resources/source/assets/BushTree03.png", BushTree03, 9.4, 11.3, 100, 100, 0, 0);
src/Game/infiniteLoop/gameLoop/Init/initAssets.cpp:15:    assetsBank->createAsset(render, "resources/source/assets/BushTree04.png", BushTree04, 10.9, 4.2, 100, 100, 0, 0);
src/Game/infiniteLoop/gameLoop/Init/initAssets.cpp:16:    assetsBank->createAsset(render, "resources/source/assets/Grass01.png", Grass01, 33.3, 5.3, 100, 100, 0, 0);
src/Game/infiniteLoop/gameLoop/Init/initAssets.cpp:17:    assetsBank->createAsset(render, "resources/source/assets/Grass02.png", Grass02, 2.4, 4.1, 100, 100, 0, 0);
src/Game/infiniteLoop/gameLoop/Init/initAssets.cpp:18:    assetsBank->createAsset(render, "resources/source/assets/Grass03.png", Grass03, 6.9, 8.2, 100, 100, 0, 0);
src/Game/infiniteLoop/gameLoop/Init/initAssets.cpp:19:    assetsBank->createAsset(render, "resources/source/assets/Grass04.png", Grass04, 5.5, 6.2, 100, 100, 0, 0);
src/Game/infiniteLoop/gameLoop/Init/initAssets.cpp:20:    assetsBank->createAsset(render, "resources/source/assets/Grass05.png", Grass05, 5.8, 8, 100, 100, 0, 0);
src/Game/infiniteLoop/gameLoop/Init/initAssets.cpp:21:    assetsBank->createAsset(render, "resources/source/assets/Ground01.png", Ground01, 10, 5.8, 100, 100, 0, 0);
src/Game/infiniteLoop/gameLoop/Init/initAssets.cpp:22:    assetsBank->createAsset(render, "resources/source/assets/MediumTree01.png", MediumTree01, 10, 67.8, 100, 100, 0, 0);
src/Game/infiniteLoop/gameLoop/Init/initAssets.cpp:23:    assetsBank->createAsset(render, "resources/source/assets/MediumTree02.png", MediumTree02, 10, 60.4, 100, 100, 0, 0);
src/Game/infiniteLoop/gameLoop/Init/initAssets.cpp:24:    assetsBank->createAsset(render, "resources/source/assets/MediumTree03.png", MediumTree03, 4.3, 52.9, 100, 100, 0, 0);
src/Game/infiniteLoop/gameLoop/Init/initAssets.cpp:25:    assetsBank->createAsset(render, "resources/source/assets/SmallTree01.png", SmallTree01, 2.8, 36.7, 100, 100, 0, 0);
src/Game/infiniteLoop/gameLoop/Init/initAssets.cpp:26:    assetsBank->createAsset(render, "resources/source/assets/SmallTree02.png", SmallTree02, 1.9, 42.2, 100, 100, 0, 0);
src/Game/infiniteLoop/gameLoop/Init/initAssets.cpp:27:    assetsBank->createAsset(render, "resources/source/assets/SmallTree03.png", SmallTree03, 3.75, 48, 100, 100, 0, 0);
src/Game/infiniteLoop/gameLoop/Init/initAssets.cpp:28:    assetsBank->createAsset(render, "resources/source/assets/SmallTree04.png", SmallTree04, 2.3, 42.6, 100, 100, 0, 0);
src/Game/infiniteLoop/gameLoop/Init/initAssets.cpp:39:    assets->loadBank(initAssetsBankLevel1(render));
src/Game/infiniteLoop/gameLoop/Management/parallaxManagement.cpp:12:    camera->QueryCameraPosition(x, y);
src/Game/infiniteLoop/gameLoop/Management/parallaxManagement.cpp:13:    while (i < parallax->QueryNbLayers())
src/Game/infiniteLoop/gameLoop/Management/parallaxManagement.cpp:15:        layer = parallax->QueryLayer(i);
src/Game/infiniteLoop/gameLoop/Management/parallaxManagement.cpp:16:        layer->moveLayer(x);
src/Game/infiniteLoop/levelSelectLoop/loop.cpp:12:    scene = initLevelSelect(render->QueryRender()); //initHomeKey
src/Game/infiniteLoop/levelSelectLoop/loop.cpp:23:        render->renderScene(scene);
src/Game/infiniteLoop/levelSelectLoop/loop.cpp:24:        render->dispScreen();
src/Game/infiniteLoop/levelSelectLoop/loop.cpp:26:        SDL_Delay(fmax(0, (1000 / (float)60 - timer.get_ticks())));
src/Game/infiniteLoop/levelSelectLoop/init.cpp:8:    scene->loadRenderer(render);
src/Game/infiniteLoop/levelSelectLoop/init.cpp:10:    scene->createElementToSceneFromPng("Background", "resources/source/HomeJeu.png", 100, 90, 0, 5, 0);
src/Game/infiniteLoop/levelSelectLoop/init.cpp:12:    scene->setBorderColor(0x00, 0x00, 0x00, 180);
src/Game/infiniteLoop/levelSelectLoop/init.cpp:13:    scene->setTextColor(0xFF, 0xFF, 0xFF, 255);
src/Game/infiniteLoop/levelSelectLoop/init.cpp:14:    scene->setSceneColor(0x00, 0x00, 0x00, 127);
src/Game/infiniteLoop/levelSelectLoop/init.cpp:15:    scene->setBrightnessColor(0x00, 0x00, 0x00, 80);
src/Game/infiniteLoop/levelSelectLoop/init.cpp:17:    scene->createElementToScene("Filtre", 100, 100, 0, 0, 0);
src/Game/infiniteLoop/levelSelectLoop/init.cpp:20:    scene->createButtonToSceneFromPng("Continue", "resources/source/FondJeu2.png", 25, 30, 37.5, 35, 5, &goToGame);
src/Game/infiniteLoop/levelSelectLoop/init.cpp:21:    scene->writeTexteScaleW(-1, "Continue");
src/Game/infiniteLoop/levelSelectLoop/init.cpp:22:    scene->addBorder(-1);
src/Game/infiniteLoop/levelSelectLoop/init.cpp:25:    scene->createButtonToSceneFromPng("New", "resources/source/NewGame.png", 25, 30, 7.5, 35, 5, &goToGame);
src/Game/infiniteLoop/levelSelectLoop/init.cpp:26:    scene->writeTexteScaleW(-1, "New Game");
src/Game/infiniteLoop/levelSelectLoop/init.cpp:27:    scene->addBorder(-1);
src/Game/infiniteLoop/levelSelectLoop/init.cpp:30:    scene->createButtonToSceneFromPng("Load", "resources/source/FondJeu2.png", 25, 30, 67.5, 35, 5, &goToGame);
src/Game/infiniteLoop/levelSelectLoop/init.cpp:31:    scene->writeTexteScaleW(-1, "Load Game");
src/Game/infiniteLoop/levelSelectLoop/init.cpp:32:    scene->addBorder(-1);
src/Game/infiniteLoop/levelSelectLoop/init.cpp:34:    scene->setSceneColor(0x00, 0x00, 0x00, 0x00);
src/Game/infiniteLoop/levelSelectLoop/init.cpp:35:    scene->setBrightnessColor(0xFF, 0xFF, 0xFF, 80);
src/Game/infiniteLoop/levelSelectLoop/init.cpp:36:    scene->createButtonToScene("Back", 20, 10, 77, 85, 5, &goToHome);
src/Game/infiniteLoop/levelSelectLoop/init.cpp:37:    scene->writeTexte(-1, "Back");
src/Game/infiniteLoop/HomeLoop/loop.cpp:5:    render->saveScreen();
src/Game/infiniteLoop/HomeLoop/loop.cpp:21:    scene = initHome(render->QueryRender()); //initHomeKey
src/Game/infiniteLoop/HomeLoop/loop.cpp:32:        render->renderScene(scene);
src/Game/infiniteLoop/HomeLoop/loop.cpp:33:        render->dispScreen();
src/Game/infiniteLoop/HomeLoop/loop.cpp:38:        SDL_Delay(fmax(0, (1000 / (float)60 - timer.get_ticks())));
src/Game/infiniteLoop/HomeLoop/UseEvent.cpp:14:        render->saveScreen();
src/Game/infiniteLoop/HomeLoop/init.cpp:8:    scene->loadRenderer(render);
src/Game/infiniteLoop/HomeLoop/init.cpp:10:    scene->setSceneColor(0x00, 0x00, 0x00, 255);
src/Game/infiniteLoop/HomeLoop/init.cpp:11:    scene->createElementToScene("filtre", 100, 100, 0, 0, 0);
src/Game/infiniteLoop/HomeLoop/init.cpp:13:    scene->createElementToSceneFromPng("Background", "resources/source/HomeJeu.png", 100, 90, 0, 5, 0);
src/Game/infiniteLoop/HomeLoop/init.cpp:15:    scene->setSceneColor(0x00, 0x00, 0xA9, 0);
src/Game/infiniteLoop/HomeLoop/init.cpp:16:    scene->setTextColor(0xFF, 0xFF, 0xFF, 0xFF);
src/Game/infiniteLoop/HomeLoop/init.cpp:17:    scene->setBorderColor(0xFF, 0xFF, 0xFF, 0xFF);
src/Game/infiniteLoop/HomeLoop/init.cpp:19:    scene->createButtonToScene("Play", 12, 6, 2, 74, 5, &goToLevelSelect);
src/Game/infiniteLoop/HomeLoop/init.cpp:20:    scene->writeTexte(-1, "Play");
src/Game/infiniteLoop/HomeLoop/init.cpp:22:    scene->createButtonToScene("Credits", 12, 6, 2, 82, 5, &goToMenu);
src/Game/infiniteLoop/HomeLoop/init.cpp:23:    scene->writeTexte(-1, "Credits");
src/Game/infiniteLoop/HomeLoop/init.cpp:25:    scene->createButtonToScene("Exit game", 12, 6, 2, 90, 5, &closeGame);
src/Game/infiniteLoop/HomeLoop/init.cpp:26:    scene->writeTexte(-1, "Exit game");
src/Game/main.cpp:35:    Tools->getWindowSize(w, h);
src/Game/main.cpp:38:    initFont.initPolice("resources/alterebro-pixel-font.ttf");
src/Common/Tools/transform.cpp:13:    res = (w * container->w) / 100.0;
src/Common/Tools/transform.cpp:27:    res = (h * container->h) / 100.0;
src/Common/Tools/transform.cpp:41:    res = (x * container->w) / 100.0 + container->x;
src/Common/Tools/transform.cpp:55:    res = (y * container->h) / 100.0 + container->y;
src/Common/Tools/move.cpp:12:    map->QueryBorne(BorderMinX, BorderMaxX);
src/Common/Tools/move.cpp:16:        x = BorderMaxX - w;
src/Common/Tools/move.cpp:34:    x = physic->QueryPostionX();
src/Common/Tools/move.cpp:36:        physic->setPosXPixel(BorderMinX);
src/Common/Tools/move.cpp:38:        physic->setPosXPixel(BorderMaxX - w);
src/Common/Tools/move.cpp:45:    y = physic->QueryPostionY();
src/Common/Tools/move.cpp:46:    if (y + h >= Tools->QueryWindowHeight())
src/Common/Tools/move.cpp:48:        physic->setPosYPixel(Tools->QueryWindowHeight() - h);
src/Common/Tools/move.cpp:49:        physic->setOnGround(true);
src/Common/Tools/move.cpp:50:        physic->setSpeedY(0);
src/Common/Tools/move.cpp:54:        physic->setOnGround(false);
src/Common/Tools/init.cpp:33:    render = SDL_CreateRenderer(window, -1, render_flags);
src/Common/Tools/setSize.cpp:5:    size->w = (w * windowWidth) / 100.0;
src/Common/Tools/setSize.cpp:6:    size->h = (h * windowHeight) / 100.0;
src/Common/Tools/setSize.cpp:7:    size->x = (x * windowWidth) / 100.0;
src/Common/Tools/setSize.cpp:8:    size->y = (y * windowHeight) / 100.0;
src/Common/Tools/setSize.cpp:13:    size->w = (w * container->w) / 100.0;
src/Common/Tools/setSize.cpp:14:    size->h = (h * container->h) / 100.0;
src/Common/Tools/setSize.cpp:15:    size->x = (x * container->w) / 100.0 + container->x;
src/Common/Tools/setSize.cpp:16:    size->y = (y * container->h) / 100.0 + container->y;
src/Common/Tools/setSize.cpp:21:    size->w = w;
src/Common/Tools/setSize.cpp:22:    size->h = h;
src/Common/Tools/setSize.cpp:23:    size->x = x;
src/Common/Tools/setSize.cpp:24:    size->y = y;
src/Common/Tools/copyRect.cpp:5:    rectDest->w = rectSource->w;
src/Common/Tools/copyRect.cpp:6:    rectDest->h = rectSource->h;
src/Common/Tools/copyRect.cpp:7:    rectDest->x = rectSource->x;
src/Common/Tools/copyRect.cpp:8:    rectDest->y = rectSource->y;
src/Common/Common/DialogueLoop/loop.cpp:19:    action->escape = actionTable->escape;
src/Common/Common/DialogueLoop/loop.cpp:20:    action->att = actionTable->att;
src/Common/Common/DialogueLoop/loop.cpp:30:    int                         answer = -1;
src/Common/Common/DialogueLoop/loop.cpp:33:    scene = initDialogue(render->QueryRender()); //initHomeKey
src/Common/Common/DialogueLoop/loop.cpp:35:    while (answer == -1)
src/Common/Common/DialogueLoop/loop.cpp:43:        render->renderScreenSave();
src/Common/Common/DialogueLoop/loop.cpp:44:        render->renderScene(scene);
src/Common/Common/DialogueLoop/loop.cpp:45:        render->dispScreen();
src/Common/Common/DialogueLoop/loop.cpp:47:        SDL_Delay(fmax(0, (1000 / (float)60 - timer.get_ticks())));
src/Common/Common/DialogueLoop/UseEvent.cpp:13:        return (-1);
src/Common/Common/DialogueLoop/init.cpp:8:    scene->loadRenderer(render);
src/Common/Common/DialogueLoop/init.cpp:10:    scene->setSceneColor(0x00, 0x00, 0x00, 175);
src/Common/Common/DialogueLoop/init.cpp:11:    scene->setTextColor(0xFF, 0xFF, 0xFF, 0xFF);
src/Common/Common/DialogueLoop/init.cpp:12:    scene->setBorderColor(0xFF, 0xFF, 0xFF, 0xFF);
src/Common/Common/DialogueLoop/init.cpp:14:    scene->createElementToScene("filtre", 100, 100, 0, 0, 40);
src/Common/Common/DialogueLoop/init.cpp:16:    scene->createElementToScene("dialogue", 50, 50, 25, 25, 41);
src/Common/Common/DialogueLoop/init.cpp:17:    scene->addBorder(-1);
src/Common/Common/DialogueLoop/init.cpp:19:    scene->setSceneColor(0x00, 0x00, 0x00, 0x00);
src/Common/Common/DialogueLoop/init.cpp:20:    scene->createElementToScene("Question", 50, 10, 25, 35, 42);
src/Common/Common/DialogueLoop/init.cpp:21:    scene->writeTexte(-1, "Are you sure ?");
src/Common/Common/DialogueLoop/init.cpp:23:    scene->createButtonToScene("YES", 20, 10, 28.3, 55, 42, &returnTrue);
src/Common/Common/DialogueLoop/init.cpp:24:    scene->addBorder(-1);
src/Common/Common/DialogueLoop/init.cpp:25:    scene->writeTexte(-1, "Yes");
src/Common/Common/DialogueLoop/init.cpp:27:    scene->createButtonToScene("NO", 20, 10, 51.6, 55, 42, &returnFalse);
src/Common/Common/DialogueLoop/init.cpp:28:    scene->addBorder(-1);
src/Common/Common/DialogueLoop/init.cpp:29:    scene->writeTexte(-1, "No");
src/Common/Class/Settings/eventControl.cpp:14:            if (saveButton->containsText())
src/Common/Class/Settings/eventControl.cpp:15:                saveButton->setZoom(NOZOOM);
src/Common/Class/Settings/eventControl.cpp:16:            saveButton->setBrightness(false);
src/Common/Class/Settings/eventControl.cpp:27:        if (button->containsText())
src/Common/Class/Settings/eventControl.cpp:28:            button->setZoom(ZOOMIN);
src/Common/Class/Settings/eventControl.cpp:29:        button->setBrightness(true);
src/Common/Class/Settings/eventControl.cpp:34:        if (button->containsText())
src/Common/Class/Settings/eventControl.cpp:35:            button->setZoom(ZOOMOUT);
src/Common/Class/Settings/eventControl.cpp:36:        button->setBrightness(true);
src/Common/Class/Settings/eventControl.cpp:41:        if (button->containsText())
src/Common/Class/Settings/eventControl.cpp:42:            button->setZoom(NOZOOM);
src/Common/Class/Settings/eventControl.cpp:43:        button->setBrightness(false);
src/Common/Class/Settings/eventControl.cpp:44:        return (button->useFonction());
src/Common/Class/EventControl/transformActionTable.cpp:31:    transform(table->upSave, table->up);
src/Common/Class/EventControl/transformActionTable.cpp:32:    transform(table->downSave, table->down);
src/Common/Class/EventControl/transformActionTable.cpp:33:    transform(table->rightSave, table->right);
src/Common/Class/EventControl/transformActionTable.cpp:34:    transform(table->leftSave, table->left);
src/Common/Class/EventControl/transformActionTable.cpp:35:    transform(table->jumpSave, table->jump);
src/Common/Class/EventControl/transformActionTable.cpp:36:    transform(table->dodgeSave, table->dodge);
src/Common/Class/EventControl/transformActionTable.cpp:37:    transform(table->attSave, table->att);
src/Common/Class/EventControl/transformActionTable.cpp:38:    transform(table->att_spSave, table->att_sp);
src/Common/Class/EventControl/transformActionTable.cpp:39:    transform(table->useSave, table->use);
src/Common/Class/EventControl/transformActionTable.cpp:40:    transform(table->spell_1Save, table->spell_1);
src/Common/Class/EventControl/transformActionTable.cpp:41:    transform(table->spell_2Save, table->spell_2);
src/Common/Class/EventControl/transformActionTable.cpp:42:    transform(table->escapeSave, table->escape);
src/Common/Class/EventControl/fillActionTable.cpp:5:    if (value->up == key)
src/Common/Class/EventControl/fillActionTable.cpp:6:        table->upSave = KeyPress;
src/Common/Class/EventControl/fillActionTable.cpp:7:    else if (value->down == key)
src/Common/Class/EventControl/fillActionTable.cpp:8:        table->downSave = KeyPress;
src/Common/Class/EventControl/fillActionTable.cpp:9:    else if (value->right == key)
src/Common/Class/EventControl/fillActionTable.cpp:10:        table->rightSave = KeyPress;
src/Common/Class/EventControl/fillActionTable.cpp:11:    else if (value->left == key)
src/Common/Class/EventControl/fillActionTable.cpp:12:        table->leftSave = KeyPress;
src/Common/Class/EventControl/fillActionTable.cpp:13:    else if (value->jump == key)
src/Common/Class/EventControl/fillActionTable.cpp:14:        table->jumpSave = KeyPress;
src/Common/Class/EventControl/fillActionTable.cpp:15:    else if (value->dodge == key)
src/Common/Class/EventControl/fillActionTable.cpp:16:        table->dodgeSave = KeyPress;
src/Common/Class/EventControl/fillActionTable.cpp:17:    else if (value->att == key)
src/Common/Class/EventControl/fillActionTable.cpp:18:        table->attSave = KeyPress;
src/Common/Class/EventControl/fillActionTable.cpp:19:    else if (value->att_sp == key)
src/Common/Class/EventControl/fillActionTable.cpp:20:        table->att_spSave = KeyPress;
src/Common/Class/EventControl/fillActionTable.cpp:21:    else if (value->use == key)
src/Common/Class/EventControl/fillActionTable.cpp:22:        table->useSave = KeyPress;
src/Common/Class/EventControl/fillActionTable.cpp:23:    else if (value->spell_1 == key)
src/Common/Class/EventControl/fillActionTable.cpp:24:        table->spell_1Save = KeyPress;
src/Common/Class/EventControl/fillActionTable.cpp:25:    else if (value->spell_2 == key)
src/Common/Class/EventControl/fillActionTable.cpp:26:        table->spell_2Save = KeyPress;
src/Common/Class/EventControl/fillActionTable.cpp:27:    else if (value->escape == key)
src/Common/Class/EventControl/fillActionTable.cpp:28:        table->escapeSave = KeyPress;
src/Common/Class/EventControl/fillActionTable.cpp:33:    if (value->up == key)
src/Common/Class/EventControl/fillActionTable.cpp:34:        table->upSave = KeyRelease;
src/Common/Class/EventControl/fillActionTable.cpp:35:    else if (value->down == key)
src/Common/Class/EventControl/fillActionTable.cpp:36:        table->downSave = KeyRelease;
src/Common/Class/EventControl/fillActionTable.cpp:37:    else if (value->right == key)
src/Common/Class/EventControl/fillActionTable.cpp:38:        table->rightSave = KeyRelease;
src/Common/Class/EventControl/fillActionTable.cpp:39:    else if (value->left == key)
src/Common/Class/EventControl/fillActionTable.cpp:40:        table->leftSave = KeyRelease;
src/Common/Class/EventControl/fillActionTable.cpp:41:    else if (value->jump == key)
src/Common/Class/EventControl/fillActionTable.cpp:42:        table->jumpSave = KeyRelease;
src/Common/Class/EventControl/fillActionTable.cpp:43:    else if (value->dodge == key)
src/Common/Class/EventControl/fillActionTable.cpp:44:        table->dodgeSave = KeyRelease;
src/Common/Class/EventControl/fillActionTable.cpp:45:    else if (value->att == key)
src/Common/Class/EventControl/fillActionTable.cpp:46:        table->attSave = KeyRelease;
src/Common/Class/EventControl/fillActionTable.cpp:47:    else if (value->att_sp == key)
src/Common/Class/EventControl/fillActionTable.cpp:48:        table->att_spSave = KeyRelease;
src/Common/Class/EventControl/fillActionTable.cpp:49:    else if (value->use == key)
src/Common/Class/EventControl/fillActionTable.cpp:50:        table->useSave = KeyRelease;
src/Common/Class/EventControl/fillActionTable.cpp:51:    else if (value->spell_1 == key)
src/Common/Class/EventControl/fillActionTable.cpp:52:        table->spell_1Save = KeyRelease;
src/Common/Class/EventControl/fillActionTable.cpp:53:    else if (value->spell_2 == key)
src/Common/Class/EventControl/fillActionTable.cpp:54:        table->spell_2Save = KeyRelease;
src/Common/Class/EventControl/fillActionTable.cpp:55:    else if (value->escape == key)
src/Common/Class/EventControl/fillActionTable.cpp:56:        table->escapeSave = KeyRelease;
src/Common/Class/EventControl/EventControl.cpp:12:    len = scene->QuerySceneLen() - 1;
src/Common/Class/EventControl/resetAction.cpp:5:    table->up = KeyNoPress;
src/Common/Class/EventControl/resetAction.cpp:6:    table->down = KeyNoPress;
src/Common/Class/EventControl/resetAction.cpp:7:    table->right = KeyNoPress;
src/Common/Class/EventControl/resetAction.cpp:8:    table->left = KeyNoPress;
src/Common/Class/EventControl/resetAction.cpp:9:    table->jump = KeyNoPress;
src/Common/Class/EventControl/resetAction.cpp:10:    table->dodge = KeyNoPress;
src/Common/Class/EventControl/resetAction.cpp:11:    table->att = KeyNoPress;
src/Common/Class/EventControl/resetAction.cpp:12:    table->att_sp = KeyNoPress;
src/Common/Class/EventControl/resetAction.cpp:13:    table->use = KeyNoPress;
src/Common/Class/EventControl/resetAction.cpp:14:    table->spell_1 = KeyNoPress;
src/Common/Class/EventControl/resetAction.cpp:15:    table->spell_2 = KeyNoPress;
src/Common/Class/EventControl/resetAction.cpp:16:    table->escape = KeyNoPress;
src/Common/Class/EventControl/init.cpp:5:    table->up = KeyNoPress;
src/Common/Class/EventControl/init.cpp:6:    table->down = KeyNoPress;
src/Common/Class/EventControl/init.cpp:7:    table->right = KeyNoPress;
src/Common/Class/EventControl/init.cpp:8:    table->left = KeyNoPress;
src/Common/Class/EventControl/init.cpp:9:    table->jump = KeyNoPress;
src/Common/Class/EventControl/init.cpp:10:    table->dodge = KeyNoPress;
src/Common/Class/EventControl/init.cpp:11:    table->att = KeyNoPress;
src/Common/Class/EventControl/init.cpp:12:    table->att_sp = KeyNoPress;
src/Common/Class/EventControl/init.cpp:13:    table->use = KeyNoPress;
src/Common/Class/EventControl/init.cpp:14:    table->spell_1 = KeyNoPress;
src/Common/Class/EventControl/init.cpp:15:    table->spell_2 = KeyNoPress;
src/Common/Class/EventControl/init.cpp:16:    table->escape = KeyNoPress;
src/Common/Class/EventControl/init.cpp:18:    table->upSave = KeyNoPress;
src/Common/Class/EventControl/init.cpp:19:    table->downSave = KeyNoPress;
src/Common/Class/EventControl/init.cpp:20:    table->rightSave = KeyNoPress;
src/Common/Class/EventControl/init.cpp:21:    table->leftSave = KeyNoPress;
src/Common/Class/EventControl/init.cpp:22:    table->jumpSave = KeyNoPress;
src/Common/Class/EventControl/init.cpp:23:    table->dodgeSave = KeyNoPress;
src/Common/Class/EventControl/init.cpp:24:    table->attSave = KeyNoPress;
src/Common/Class/EventControl/init.cpp:25:    table->att_spSave = KeyNoPress;
src/Common/Class/EventControl/init.cpp:26:    table->useSave = KeyNoPress;
src/Common/Class/EventControl/init.cpp:27:    table->spell_1Save = KeyNoPress;
src/Common/Class/EventControl/init.cpp:28:    table->spell_2Save = KeyNoPress;
src/Common/Class/EventControl/init.cpp:29:    table->escape = KeyNoPress;
src/Common/Class/EventControl/fillActionValue.cpp:5:    value->up = SDLK_z;
src/Common/Class/EventControl/fillActionValue.cpp:6:    value->down = SDLK_s;
src/Common/Class/EventControl/fillActionValue.cpp:7:    value->right = SDLK_d;
src/Common/Class/EventControl/fillActionValue.cpp:8:    value->left = SDLK_q;
src/Common/Class/EventControl/fillActionValue.cpp:9:    value->jump = SDLK_SPACE;
src/Common/Class/EventControl/fillActionValue.cpp:10:    value->dodge = SDLK_LSHIFT;
src/Common/Class/EventControl/fillActionValue.cpp:11:    value->att = SDL_BUTTON_LEFT;
src/Common/Class/EventControl/fillActionValue.cpp:12:    value->att_sp = SDL_BUTTON_RIGHT;
src/Common/Class/EventControl/fillActionValue.cpp:13:    value->use = SDLK_f;
src/Common/Class/EventControl/fillActionValue.cpp:14:    value->spell_1 = SDLK_a;
src/Common/Class/EventControl/fillActionValue.cpp:15:    value->spell_2 = SDLK_e;
src/Common/Class/EventControl/fillActionValue.cpp:16:    value->escape = SDLK_ESCAPE;
src/Common/Class/EventControl/boutonControl.cpp:10:        button = scene->QuerySingleElement(len);
src/Common/Class/EventControl/boutonControl.cpp:11:        if (button->isElementButton() && button->isElementDisp() && button->isButtonEnable())
src/Common/Class/EventControl/boutonControl.cpp:13:            size = button->QueryElementSize();
src/Common/Class/EventControl/boutonControl.cpp:14:            if (x_mouse >= size->x && x_mouse <= (size->x + size->w) && y_mouse >= size->y && y_mouse <= (size->y + size->h))
src/Common/Class/EventControl/boutonControl.cpp:17:        len--;
src/Common/Class/EventControl/boutonControl.cpp:19:    if (len == -1)
src/Common/Class/EventControl/boutonControl.cpp:44:            if (saveButton->containsText())
src/Common/Class/EventControl/boutonControl.cpp:45:                saveButton->setZoom(NOZOOM);
src/Common/Class/EventControl/boutonControl.cpp:46:            saveButton->setBrightness(false);
src/Common/Class/EventControl/boutonControl.cpp:54:            if (button->containsText())
src/Common/Class/EventControl/boutonControl.cpp:55:                button->setZoom(ZOOMIN); //set zoomIn on
src/Common/Class/EventControl/boutonControl.cpp:56:            button->setBrightness(true); // set brillance on
src/Common/Class/EventControl/boutonControl.cpp:61:            if (button->containsText())
src/Common/Class/EventControl/boutonControl.cpp:62:                button->setZoom(ZOOMOUT);
src/Common/Class/EventControl/boutonControl.cpp:63:            button->setBrightness(true);
src/Common/Class/EventControl/boutonControl.cpp:68:            if (button->containsText())
src/Common/Class/EventControl/boutonControl.cpp:69:                button->setZoom(NOZOOM);
src/Common/Class/EventControl/boutonControl.cpp:70:            button->setBrightness(false);
src/Common/Class/EventControl/boutonControl.cpp:71:            return (button->useFonction());
src/Common/Class/Timer/timer.cpp:31:            return SDL_GetTicks() - startTicks;
src/Common/Class/Timer/timer.cpp:41:        pausedTicks = SDL_GetTicks() - startTicks;
src/Common/Class/Timer/timer.cpp:50:        startTicks = SDL_GetTicks() - pausedTicks;
src/Common/Class/Render/render.cpp:20:    w = Tools->QueryWindowWidth();
src/Common/Class/Render/render.cpp:21:    h = Tools->QueryWindowHeight();
src/Common/Class/Render/renderScene/renderBorder.cpp:8:    texture = border->QueryTexture();
src/Common/Class/Render/renderScene/renderBorder.cpp:9:    size = border->QueryRectUp();
src/Common/Class/Render/renderScene/renderBorder.cpp:11:    size = border->QueryRectDown();
src/Common/Class/Render/renderScene/renderBorder.cpp:13:    size = border->QueryRectRight();
src/Common/Class/Render/renderScene/renderBorder.cpp:15:    size = border->QueryRectLeft();
src/Common/Class/Render/renderScene/renderText.cpp:8:    texture = text->QueryTexte();
src/Common/Class/Render/renderScene/renderText.cpp:9:    size = text->QuerySize();
src/Common/Class/Render/renderScene/renderBrightness.cpp:8:    texture = brightness->QueryTexture();
src/Common/Class/Render/renderScene/renderBrightness.cpp:9:    size = brightness->QuerySize();
src/Common/Class/Render/renderScene/renderScene.cpp:9:    if (scene->QueryDispScene())
src/Common/Class/Render/renderScene/renderScene.cpp:12:        len = scene->QuerySceneLen();
src/Common/Class/Render/renderScene/renderScene.cpp:15:            element = scene->QuerySingleElement(i);
src/Common/Class/Render/renderScene/renderScene.cpp:16:            if (element->isElementDisp())
src/Common/Class/Render/renderScene/renderScene.cpp:19:                if (element->haveBrightness())
src/Common/Class/Render/renderScene/renderScene.cpp:20:                    renderBrightness(element->QueryBrightness());
src/Common/Class/Render/renderScene/renderScene.cpp:21:                if (element->containsText())
src/Common/Class/Render/renderScene/renderScene.cpp:22:                    renderText(element->QueryText());
src/Common/Class/Render/renderScene/renderScene.cpp:23:                if (element->haveBorder()) 
src/Common/Class/Render/renderScene/renderScene.cpp:24:                    renderBorder(element->QueryBorder());
src/Common/Class/Render/renderGameScene/renderMC.cpp:8:    physic->QueryHitBox(rect.w, rect.h, rect.x, rect.y);
src/Common/Class/Render/renderGameScene/renderMC.cpp:11:    physic->QueryAttack(rect.w, rect.h, rect.x, rect.y);
src/Common/Class/Render/renderGameScene/renderMC.cpp:21:    texture = MC->QueryTexture();
src/Common/Class/Render/renderGameScene/renderMC.cpp:22:    frame = MC->QueryFrame();
src/Common/Class/Render/renderGameScene/renderMC.cpp:23:    MC->QuerySizePos(size.w, size.h, size.x, size.y);
src/Common/Class/Render/renderGameScene/renderMC.cpp:24:    size.x -= cameraX;
src/Common/Class/Render/renderGameScene/renderMC.cpp:25:    size.y -= cameraY;
src/Common/Class/Render/renderGameScene/renderMC.cpp:27:    drawHitBox(MC->QueryPhysic(), render);
src/Common/Class/Render/renderScene/renderElement.cpp:8:    texture = element->QueryElementTexture();
src/Common/Class/Render/renderScene/renderElement.cpp:9:    size = element->QueryElementSize();
src/Common/Class/Render/renderGameScene/renderParallax.cpp:22:    len = parallax->QueryNbLayers();
src/Common/Class/Render/renderGameScene/renderParallax.cpp:26:        layer = parallax->QueryLayer(i);
src/Common/Class/Render/renderGameScene/renderParallax.cpp:27:        layerTexture = layer->QueryTexture();
src/Common/Class/Render/renderGameScene/renderParallax.cpp:28:        if (layer->secondScopeNeeded())
src/Common/Class/Render/renderGameScene/renderParallax.cpp:30:            scopeMain = layer->QueryScopeMain();
src/Common/Class/Render/renderGameScene/renderParallax.cpp:31:            scopeSecond = layer->QueryScopeSecond();
src/Common/Class/Render/renderGameScene/renderParallax.cpp:32:            sizeMain = layer->QuerySizeMain();
src/Common/Class/Render/renderGameScene/renderParallax.cpp:33:            sizeSecond = layer->QuerySizeSecond();
src/Common/Class/Render/renderGameScene/renderParallax.cpp:36:            if (i == len - 1)
src/Common/Class/Render/renderGameScene/renderParallax.cpp:44:            scopeMain = layer->QueryScopeMain();
src/Common/Class/Render/renderGameScene/renderParallax.cpp:45:            sizeMain = layer->QuerySizeMain();
src/Common/Class/Render/renderGameScene/renderParallax.cpp:47:            if (i == len -1)
src/Common/Class/Render/renderGameScene/renderGameScene.cpp:9:    camera = gameScene->QueryCamera();
src/Common/Class/Render/renderGameScene/renderGameScene.cpp:10:    camera->QueryCameraPosition(cameraX, cameraY);
src/Common/Class/Render/renderGameScene/renderGameScene.cpp:12:    if (gameScene->haveParallax())
src/Common/Class/Render/renderGameScene/renderGameScene.cpp:13:        renderParallax(gameScene->QueryParallax());
src/Common/Class/Render/renderGameScene/renderGameScene.cpp:14:    if (gameScene->haveAssets())
src/Common/Class/Render/renderGameScene/renderGameScene.cpp:15:        renderAssets(gameScene->QueryAssets(), cameraX, cameraY);
src/Common/Class/Render/renderGameScene/renderGameScene.cpp:19:    if (gameScene->haveMC())
src/Common/Class/Render/renderGameScene/renderGameScene.cpp:20:        renderMC(gameScene->QueryMC(), cameraX, cameraY);
src/Common/Class/Render/renderGameScene/renderGameScene.cpp:21:    if (gameScene->haveEnemies())
src/Common/Class/Render/renderGameScene/renderGameScene.cpp:22:        renderEnemy(gameScene->QueryEnemies(), cameraX, cameraY);
src/Common/Class/Render/renderGameScene/renderEnemy.cpp:13:    while (i < enemies->QueryNbEnemies())
src/Common/Class/Render/renderGameScene/renderEnemy.cpp:15:        enemy = enemies->QueryEnemy(i);
src/Common/Class/Render/renderGameScene/renderEnemy.cpp:16:        texture = enemy->QueryTexture();
src/Common/Class/Render/renderGameScene/renderEnemy.cpp:17:        frame = enemy->QueryFrame();
src/Common/Class/Render/renderGameScene/renderEnemy.cpp:18:        enemy->QuerySizePos(size.w, size.h, size.x, size.y);
src/Common/Class/Render/renderGameScene/renderEnemy.cpp:19:        size.x -= cameraX;
src/Common/Class/Render/renderGameScene/renderEnemy.cpp:20:        size.y -= cameraY;
src/Common/Class/Render/renderGameScene/renderAssets.cpp:12:    while (i < assets->QueryNbAssets())
src/Common/Class/Render/renderGameScene/renderAssets.cpp:14:        asset = assets->QueryAsset(i);
src/Common/Class/Render/renderGameScene/renderAssets.cpp:15:        texture = asset->QueryTexture();
src/Common/Class/Render/renderGameScene/renderAssets.cpp:16:        asset->QuerySize(size.w, size.h, size.x, size.y);
src/Common/Class/Render/renderGameScene/renderAssets.cpp:17:        size.x -= cameraX;
src/Common/Class/Render/renderGameScene/renderAssets.cpp:18:        size.y -= cameraY;
src/Common/Class/Render/renderGameScene/renderAssets.cpp:20://        renderHitBox(asset->QueryHitBox(), render, &size, cameraX, cameraY);
src/Common/Class/Animation/Animation/query.cpp:43:        return(-speedX);
src/Common/Class/Animation/Animation/useAnimation.cpp:5:    Tools->verbose(LEVEL3, "sdsd", "animation =", index + 1, "/", nbFrame);
src/Common/Class/Animation/Animation/set.cpp:7:        hitboxesR[indexSource]->setWPixel(wSource * w);
src/Common/Class/Animation/Animation/set.cpp:8:        hitboxesR[indexSource]->setHPixel(hSource * h);
src/Common/Class/Animation/Animation/set.cpp:9:        hitboxesR[indexSource]->setXPixel(xSource * w);
src/Common/Class/Animation/Animation/set.cpp:10:        hitboxesR[indexSource]->setYPixel(ySource * h);
src/Common/Class/Animation/Animation/set.cpp:14:        hitboxesL[indexSource]->setWPixel(wSource * w);
src/Common/Class/Animation/Animation/set.cpp:15:        hitboxesL[indexSource]->setHPixel(hSource * h);
src/Common/Class/Animation/Animation/set.cpp:16:        hitboxesL[indexSource]->setXPixel(xSource * w);
src/Common/Class/Animation/Animation/set.cpp:17:        hitboxesL[indexSource]->setYPixel(ySource * h);
src/Common/Class/Animation/Animation/set.cpp:25:        attackR[indexSource]->setWPixel(wSource * w);
src/Common/Class/Animation/Animation/set.cpp:26:        attackR[indexSource]->setHPixel(hSource * h);
src/Common/Class/Animation/Animation/set.cpp:27:        attackR[indexSource]->setXPixel(xSource * w);
src/Common/Class/Animation/Animation/set.cpp:28:        attackR[indexSource]->setYPixel(ySource * h);
src/Common/Class/Animation/Animation/set.cpp:32:        attackL[indexSource]->setWPixel(wSource * w);
src/Common/Class/Animation/Animation/set.cpp:33:        attackL[indexSource]->setHPixel(hSource * h);
src/Common/Class/Animation/Animation/set.cpp:34:        attackL[indexSource]->setXPixel(xSource * w);
src/Common/Class/Animation/Animation/set.cpp:35:        attackL[indexSource]->setYPixel(ySource * h);
src/Common/Class/Animation/Animation/loadAnimations.cpp:17:        Tools->verbose(LEVEL1, "ss", "error creating surface (cs_animation) PNG =", png_left.c_str());
src/Common/Class/Animation/Animation/loadAnimations.cpp:26:        Tools->verbose(LEVEL1, "ss", "error creating surface 2 (cs_animation) PNG =", png_right.c_str());
src/Common/Class/Animation/Animation/loadAnimations.cpp:61:        newFrame->w = frameWidth;
src/Common/Class/Animation/Animation/loadAnimations.cpp:62:        newFrame->h = frameHeight;
src/Common/Class/Animation/Animation/loadAnimations.cpp:63:        newFrame->x = frameWidth * (i % nb_columnframe);
src/Common/Class/Animation/Animation/loadAnimations.cpp:64:        newFrame->y = frameHeight * (i / nb_columnframe);
src/Common/Class/Animation/Animation/loadAnimations.cpp:68:        newHitBox->setWPixel(w);
src/Common/Class/Animation/Animation/loadAnimations.cpp:69:        newHitBox->setHPixel(h);
src/Common/Class/Animation/Animation/loadAnimations.cpp:70:        newHitBox->setXPixel(0);
src/Common/Class/Animation/Animation/loadAnimations.cpp:71:        newHitBox->setYPixel(0);
src/Common/Class/Animation/Animation/loadAnimations.cpp:75:        newHitBox2->setWPixel(w);
src/Common/Class/Animation/Animation/loadAnimations.cpp:76:        newHitBox2->setHPixel(h);
src/Common/Class/Animation/Animation/loadAnimations.cpp:77:        newHitBox2->setXPixel(0);
src/Common/Class/Animation/Animation/loadAnimations.cpp:78:        newHitBox2->setYPixel(0);
src/Common/Class/Animation/Animation/loadAnimations.cpp:82:        newAttack->setWPixel(w);
src/Common/Class/Animation/Animation/loadAnimations.cpp:83:        newAttack->setHPixel(h);
src/Common/Class/Animation/Animation/loadAnimations.cpp:84:        newAttack->setXPixel(0);
src/Common/Class/Animation/Animation/loadAnimations.cpp:85:        newAttack->setYPixel(0);
src/Common/Class/Animation/Animation/loadAnimations.cpp:89:        newAttack2->setWPixel(w);
src/Common/Class/Animation/Animation/loadAnimations.cpp:90:        newAttack2->setHPixel(h);
src/Common/Class/Animation/Animation/loadAnimations.cpp:91:        newAttack2->setXPixel(0);
src/Common/Class/Animation/Animation/loadAnimations.cpp:92:        newAttack2->setYPixel(0);
src/Common/Class/Animation/Animation/loadAnimations.cpp:100:    speedX = Tools->transformWidth(speedXSource);
src/Common/Class/Animation/Animation/loadAnimations.cpp:101:    speedY = Tools->transformHeight(speedYSource);
src/Common/Class/Animation/Animation/loadAnimations.cpp:108:    w = Tools->transformWidth(wSource);
src/Common/Class/Animation/Animation/loadAnimations.cpp:109:    h = Tools->transformHeight(hSource);
src/Common/Class/Animation/Animation/Animation.cpp:5:    Tools->verbose(LEVEL2, "s", "create animation");
src/Common/Class/Animation/Animation/Animation.cpp:14:    Tools->verbose(LEVEL2, "s", "delete animation");
src/Common/Class/Animation/Animation/nextFrame.cpp:17:        std::cout << "time - " << time << " <-> " << animationTime << std::endl;
src/Common/Class/Animation/Animation/nextFrame.cpp:18:        std::cout << "frame - " << nbFrame << " <-> " << index << std::endl;
src/Common/Class/Animation/Animation/nextFrame.cpp:34:    index--;
src/Common/Class/Animation/Animation/nextFrame.cpp:36:        index = nbFrame - 1;
src/Common/Class/Animation/AnimationsBank/query.cpp:11:        if (animations[i]->QueryName() == nameSource)
src/Common/Class/Animation/AnimationsBank/AnimationBank.cpp:5:    Tools->verbose(LEVEL2, "s", "create bank animation");
src/Common/Class/Animation/AnimationsBank/AnimationBank.cpp:11:    Tools->verbose(LEVEL2, "s", "delete bank animation");
src/Common/Class/GameScene/BackGround/Parallax/Parallax/move.cpp:5:    layers[index]->moveLayer(x);
src/Common/Class/GameScene/BackGround/Parallax/Parallax/create.cpp:9:    layer->createLayer(render, source, speedSource, zIndex);
src/Common/Class/GameScene/BackGround/Parallax/Parallax/create.cpp:12:    while (i < layers.size() && zIndex >= layers[i]->QueryZindex())
src/Common/Class/GameScene/BackGround/Parallax/Layer/createLayer.cpp:10:        Tools->verbose(LEVEL1, "s", "error creating surface");
src/Common/Class/GameScene/BackGround/Parallax/Layer/createLayer.cpp:21:    WindowWidth = Tools->QueryWindowWidth();
src/Common/Class/GameScene/BackGround/Parallax/Layer/createLayer.cpp:22:    WindowHeight = Tools->QueryWindowHeight();
src/Common/Class/GameScene/BackGround/Parallax/Layer/createLayer.cpp:39:    scopeMain->w = scopeWidth;
src/Common/Class/GameScene/BackGround/Parallax/Layer/createLayer.cpp:40:    scopeMain->h = scopeHeight;
src/Common/Class/GameScene/BackGround/Parallax/Layer/createLayer.cpp:41:    scopeMain->x = 0;
src/Common/Class/GameScene/BackGround/Parallax/Layer/createLayer.cpp:42:    scopeMain->y = 0;
src/Common/Class/GameScene/BackGround/Parallax/Layer/createLayer.cpp:44:    scopeSecond->w = 0;
src/Common/Class/GameScene/BackGround/Parallax/Layer/createLayer.cpp:45:    scopeSecond->h = 0;
src/Common/Class/GameScene/BackGround/Parallax/Layer/createLayer.cpp:46:    scopeSecond->x = 0;
src/Common/Class/GameScene/BackGround/Parallax/Layer/createLayer.cpp:47:    scopeSecond->y = 0;
src/Common/Class/GameScene/BackGround/Parallax/Layer/createLayer.cpp:49:    sizeMain->w = WindowWidth;
src/Common/Class/GameScene/BackGround/Parallax/Layer/createLayer.cpp:50:    sizeMain->h = WindowHeight;
src/Common/Class/GameScene/BackGround/Parallax/Layer/createLayer.cpp:51:    sizeMain->x = 0;
src/Common/Class/GameScene/BackGround/Parallax/Layer/createLayer.cpp:52:    sizeMain->y = 0;
src/Common/Class/GameScene/BackGround/Parallax/Layer/createLayer.cpp:54:    sizeSecond->w = 0;
src/Common/Class/GameScene/BackGround/Parallax/Layer/createLayer.cpp:55:    sizeSecond->h = 0;
src/Common/Class/GameScene/BackGround/Parallax/Layer/createLayer.cpp:56:    sizeSecond->x = 0;
src/Common/Class/GameScene/BackGround/Parallax/Layer/createLayer.cpp:57:    sizeSecond->y = 0;
src/Common/Class/GameScene/BackGround/Parallax/Layer/moveLayer.cpp:11:    x = Tools->modulo(scopeX, textureW);
src/Common/Class/GameScene/BackGround/Parallax/Layer/moveLayer.cpp:13:    windowW = Tools->QueryWindowWidth();
src/Common/Class/GameScene/BackGround/Parallax/Layer/moveLayer.cpp:14:    windowH = Tools->QueryWindowHeight();
src/Common/Class/GameScene/BackGround/Parallax/Layer/moveLayer.cpp:18:        scopeMain->w = scopeWidth - (x + scopeWidth - textureW);
src/Common/Class/GameScene/BackGround/Parallax/Layer/moveLayer.cpp:19:        scopeMain->h = scopeHeight;
src/Common/Class/GameScene/BackGround/Parallax/Layer/moveLayer.cpp:20:        scopeMain->x = x;
src/Common/Class/GameScene/BackGround/Parallax/Layer/moveLayer.cpp:21:        scopeMain->y = 0;
src/Common/Class/GameScene/BackGround/Parallax/Layer/moveLayer.cpp:23:        scopeSecond->w = x + scopeWidth - textureW;
src/Common/Class/GameScene/BackGround/Parallax/Layer/moveLayer.cpp:24:        scopeSecond->h = scopeHeight;
src/Common/Class/GameScene/BackGround/Parallax/Layer/moveLayer.cpp:25:        scopeSecond->x = 0;
src/Common/Class/GameScene/BackGround/Parallax/Layer/moveLayer.cpp:26:        scopeSecond->y = 0;
src/Common/Class/GameScene/BackGround/Parallax/Layer/moveLayer.cpp:28:        sizeMain->w = windowW * (scopeMain->w / (float)scopeWidth);
src/Common/Class/GameScene/BackGround/Parallax/Layer/moveLayer.cpp:29:        sizeMain->h = windowH;
src/Common/Class/GameScene/BackGround/Parallax/Layer/moveLayer.cpp:30:        sizeMain->x = 0;
src/Common/Class/GameScene/BackGround/Parallax/Layer/moveLayer.cpp:31:        sizeMain->y = 0;
src/Common/Class/GameScene/BackGround/Parallax/Layer/moveLayer.cpp:33:        sizeSecond->w = windowW - sizeMain->w;
src/Common/Class/GameScene/BackGround/Parallax/Layer/moveLayer.cpp:34:        sizeSecond->h = windowH;
src/Common/Class/GameScene/BackGround/Parallax/Layer/moveLayer.cpp:35:        sizeSecond->x = sizeMain->w;
src/Common/Class/GameScene/BackGround/Parallax/Layer/moveLayer.cpp:36:        sizeSecond->y = 0;
src/Common/Class/GameScene/BackGround/Parallax/Layer/moveLayer.cpp:42:        scopeMain->w = scopeWidth;
src/Common/Class/GameScene/BackGround/Parallax/Layer/moveLayer.cpp:43:        scopeMain->h = scopeHeight;
src/Common/Class/GameScene/BackGround/Parallax/Layer/moveLayer.cpp:44:        scopeMain->x = x;
src/Common/Class/GameScene/BackGround/Parallax/Layer/moveLayer.cpp:45:        scopeMain->y = 0;
src/Common/Class/GameScene/BackGround/Parallax/Layer/moveLayer.cpp:47:        sizeMain->w = windowW;
src/Common/Class/GameScene/BackGround/Parallax/Layer/moveLayer.cpp:48:        sizeMain->h = windowH;
src/Common/Class/GameScene/BackGround/Parallax/Layer/moveLayer.cpp:49:        sizeMain->x = 0;
src/Common/Class/GameScene/BackGround/Parallax/Layer/moveLayer.cpp:50:        sizeMain->y = 0;
src/Common/Class/GameScene/Asset/Asset/asset.cpp:25:        Tools->verbose(LEVEL1, "s", "error creating surface");
src/Common/Class/GameScene/Asset/Asset/asset.cpp:31:    w = Tools->transformWidth(wSource);
src/Common/Class/GameScene/Asset/Asset/asset.cpp:32:    h = Tools->transformHeight(hSource);
src/Common/Class/GameScene/Asset/Asset/asset.cpp:34:    prop->w = wProp;
src/Common/Class/GameScene/Asset/Asset/asset.cpp:35:    prop->h = hProp;
src/Common/Class/GameScene/Asset/Asset/asset.cpp:36:    prop->x = xProp;
src/Common/Class/GameScene/Asset/Asset/asset.cpp:37:    prop->y = yProp;
src/Common/Class/GameScene/Asset/Asset/asset.cpp:46:    x = Tools->transformX(xSource);
src/Common/Class/GameScene/Asset/Asset/asset.cpp:47:    y = Tools->transformY(ySource);
src/Common/Class/GameScene/Asset/Asset/asset.cpp:140://        hitBox->setXPixel((w * prop->x) / 100 + x);
src/Common/Class/GameScene/Asset/Asset/asset.cpp:141://        hitBox->setYPixel((h * prop->y) / 100 + y);
src/Common/Class/GameScene/Asset/Asset/asset.cpp:147:        hitBox->moveX(xSource);
src/Common/Class/GameScene/Asset/Asset/asset.cpp:148:        hitBox->moveY(ySource);
src/Common/Class/GameScene/Asset/Asset/asset.cpp:158:        x -= wSource / 2;
src/Common/Class/GameScene/Asset/Asset/asset.cpp:159:        y -= hSource / 2;
src/Common/Class/GameScene/Asset/Asset/asset.cpp:172:    std::cout << "size w = " << w / (float)Tools->QueryWindowWidth() * 100 << " size h = " << h / (float)Tools->QueryWindowHeight() * 100 << std::endl;
src/Common/Class/GameScene/Asset/Asset/asset.cpp:173:    std::cout << "size x = " << x / (float)Tools->QueryWindowWidth() * 100 << " size y = " << y / (float)Tools->QueryWindowHeight() * 100 << std::endl;
src/Common/Class/GameScene/Asset/Asset/asset.cpp:177:    std::cout << "hitBox w = " << (hitBox->QueryW() * 100) / (float)w << " hitBox h = " << (hitBox->QueryH() * 100) / (float)h << std::endl;
src/Common/Class/GameScene/Asset/Asset/asset.cpp:178:    std::cout << "hitBox x = " << (hitBox->QueryX() - x * 100) / (float)w << " hitBox y = " << (hitBox->QueryY() - y * 100) / (float)h << std::endl;
src/Common/Class/GameScene/Asset/Assets/assets.cpp:20:    asset->setTexture(assetSource->QueryTexture());
src/Common/Class/GameScene/Asset/Assets/assets.cpp:21:    asset->setName(assetSource->QueryName());
src/Common/Class/GameScene/Asset/Assets/assets.cpp:22:    asset->setSize(assetSource->QueryWidth(), assetSource->QueryHeight());
src/Common/Class/GameScene/Asset/Assets/assets.cpp:24:    prop = asset->QueryProportion();
src/Common/Class/GameScene/Asset/Assets/assets.cpp:25:    propSource = assetSource->QueryProportion();
src/Common/Class/GameScene/Asset/Assets/assets.cpp:27:    prop->w = propSource->w;
src/Common/Class/GameScene/Asset/Assets/assets.cpp:28:    prop->h = propSource->h;
src/Common/Class/GameScene/Asset/Assets/assets.cpp:29:    prop->x = propSource->x;
src/Common/Class/GameScene/Asset/Assets/assets.cpp:30:    prop->y = propSource->y;
src/Common/Class/GameScene/Asset/Assets/assets.cpp:42:        assets[i]->setID(i);
src/Common/Class/GameScene/Asset/Assets/assets.cpp:59:        ground[i]->QuerySize(w, h, x, y);
src/Common/Class/GameScene/Asset/Assets/assets.cpp:78:    asset = copyAsset(assetsBank->QueryAsset(name));
src/Common/Class/GameScene/Asset/Assets/assets.cpp:80:    asset->addAsset(zIndex, x, y);
src/Common/Class/GameScene/Asset/Assets/assets.cpp:82:    hitBox = asset->QueryHitBox();
src/Common/Class/GameScene/Asset/Assets/assets.cpp:84:    asset->QuerySize(wAsset, hAsset, xAsset, yAsset);
src/Common/Class/GameScene/Asset/Assets/assets.cpp:85:    prop = asset->QueryProportion();
src/Common/Class/GameScene/Asset/Assets/assets.cpp:87:    hitBox->setWPixel((wAsset * prop->w) / 100);
src/Common/Class/GameScene/Asset/Assets/assets.cpp:88:    hitBox->setHPixel((hAsset * prop->h) / 100);
src/Common/Class/GameScene/Asset/Assets/assets.cpp:89:    hitBox->setXPixel((wAsset * prop->x) / 100 + xAsset);
src/Common/Class/GameScene/Asset/Assets/assets.cpp:90:    hitBox->setYPixel((hAsset * prop->y) / 100 + yAsset);
src/Common/Class/GameScene/Asset/Assets/assets.cpp:93:    while (i < assets.size() && zIndex >= assets[i]->QueryZIndex())
src/Common/Class/GameScene/Asset/Assets/assets.cpp:115:    asset = copyAsset(assetsBank->QueryAsset(name));
src/Common/Class/GameScene/Asset/Assets/assets.cpp:117:    asset->addAssetPixel(zIndex, x, y);
src/Common/Class/GameScene/Asset/Assets/assets.cpp:119:    hitBox = asset->QueryHitBox();
src/Common/Class/GameScene/Asset/Assets/assets.cpp:121:    asset->QuerySize(wAsset, hAsset, xAsset, yAsset);
src/Common/Class/GameScene/Asset/Assets/assets.cpp:122:    prop = asset->QueryProportion();
src/Common/Class/GameScene/Asset/Assets/assets.cpp:124:    hitBox->setWPixel((wAsset * prop->w) / 100);
src/Common/Class/GameScene/Asset/Assets/assets.cpp:125:    hitBox->setHPixel((hAsset * prop->h) / 100);
src/Common/Class/GameScene/Asset/Assets/assets.cpp:126:    hitBox->setXPixel((wAsset * prop->x) / 100 + xAsset);
src/Common/Class/GameScene/Asset/Assets/assets.cpp:127:    hitBox->setYPixel((hAsset * prop->y) / 100 + yAsset);
src/Common/Class/GameScene/Asset/Assets/assets.cpp:130:    while (i < assets.size() && zIndex >= assets[i]->QueryZIndex())
src/Common/Class/GameScene/Asset/Assets/assets.cpp:185://    assets->loadAsset(BigTree01, 1, XBigTree02, YBigTree01);
src/Common/Class/GameScene/Asset/Assets/assets.cpp:198:    std::cout << "  assets->loadBank(initAssetsBankLevel1(render));" << std::endl << std::endl;
src/Common/Class/GameScene/Asset/Assets/assets.cpp:203:        std::cout << "  assets->loadAsset(";
src/Common/Class/GameScene/Asset/Assets/assets.cpp:205:        printName(assets[i]->QueryName());
src/Common/Class/GameScene/Asset/Assets/assets.cpp:208:        std::cout << assets[i]->QueryZIndex();
src/Common/Class/GameScene/Asset/Assets/assets.cpp:212:        assets[i]->QuerySize(w, h, x, y);
src/Common/Class/GameScene/Asset/Assets/assets.cpp:213:        std::cout << x / (float)Tools->QueryWindowWidth() * 100;
src/Common/Class/GameScene/Asset/Assets/assets.cpp:215:        std::cout << y / (float)Tools->QueryWindowHeight() * 100;
src/Common/Class/GameScene/Asset/AssetsBank/assetsBank.cpp:18:    asset->createAsset(render, source, name, w, h, wProp, hProp, xProp, yProp);
src/Common/Class/GameScene/Asset/AssetsBank/assetsBank.cpp:29:        if (assets[i]->QueryName() == name)
src/Common/Class/GameScene/PhysicEngine/Speed/set.cpp:5:    vX = Tools->transformWidth(vXSource);
src/Common/Class/GameScene/PhysicEngine/Speed/set.cpp:10:    vY = Tools->transformHeight(vYSource);
src/Common/Class/GameScene/PhysicEngine/Speed/set.cpp:15:    vX = Tools->transformWidth(vXSource);
src/Common/Class/GameScene/PhysicEngine/Speed/set.cpp:16:    vY = Tools->transformHeight(vYSource);
src/Common/Class/GameScene/PhysicEngine/Position/set.cpp:5:    x = Tools->transformWidth(xSource);
src/Common/Class/GameScene/PhysicEngine/Position/set.cpp:10:    y = Tools->transformHeight(ySource);
src/Common/Class/GameScene/PhysicEngine/PersonalPhysic/query.cpp:36:    hitbox->QuerySizePos(w, h, xDecale, yDecale);
src/Common/Class/GameScene/PhysicEngine/PersonalPhysic/query.cpp:61:    attack->QuerySizePos(w, h, xDecale, yDecale);
src/Common/Class/GameScene/PhysicEngine/PersonalPhysic/update.cpp:5:    speed.updateSpeed(WorldPhysics->QueryGravity(), deltaT);
src/Common/Class/GameScene/PhysicEngine/Force/set.cpp:5:    aX = Tools->transformWidth(aXsource);
src/Common/Class/GameScene/PhysicEngine/Force/set.cpp:10:    aY = Tools->transformHeight(aYsource);
src/Common/Class/GameScene/Character/verify.cpp:10:    return (animation->verifyAnimationEnd());
src/Common/Class/GameScene/Character/Query.cpp:15:    animation->QuerySize(wDest, hDest);
src/Common/Class/GameScene/Character/Query.cpp:16:    physic->QueryPostion(xDest, yDest);
src/Common/Class/GameScene/Character/Query.cpp:21:    animation->QuerySize(wDest, hDest);
src/Common/Class/GameScene/Character/Query.cpp:26:    physic->QueryPostion(xDest, yDest);
src/Common/Class/GameScene/Character/Query.cpp:36:    return (animation->QueryMovementX(right));
src/Common/Class/GameScene/Character/loadAnimation.cpp:8:        newAnimation = bankMoine->QueryAnimationByname(name);
src/Common/Class/GameScene/Character/loadAnimation.cpp:10:        newAnimation = bankKitsune->QueryAnimationByname(name);
src/Common/Class/GameScene/Character/loadAnimation.cpp:19:        animation->restartAnimation();
src/Common/Class/GameScene/Character/loadAnimation.cpp:21:    physic->setSpeedX(animation->QueryMovementX(right));
src/Common/Class/GameScene/Character/useAnimation.cpp:6:    animation->nextFrame();
src/Common/Class/GameScene/Character/useAnimation.cpp:12:    animation->previousFrame();
src/Common/Class/GameScene/Character/useAnimation.cpp:17:    texture = animation->QueryTexture(right);
src/Common/Class/GameScene/Character/useAnimation.cpp:18:    frame = animation->QueryFrame();
src/Common/Class/GameScene/Character/useAnimation.cpp:19:    physic->setHitBox(animation->QueryHitbox(right));
src/Common/Class/GameScene/Character/useAnimation.cpp:20:    physic->setAttack(animation->QueryAttack(right));
src/Common/Class/GameScene/Character/useAnimation.cpp:28:    physic->updateSpeed(deltaT);
src/Common/Class/GameScene/Character/useAnimation.cpp:29:    physic->updatePosition(deltaT);
src/Common/Class/GameScene/Character/useAnimation.cpp:32:    setOnGround(physic->verifyOnGround());
src/Common/Class/GameScene/Character/useAnimation.cpp:41:        QueryPhysic()->setSpeedY(-1);
src/Common/Class/GameScene/Character/useAnimation.cpp:42:        jump--;
src/Common/Class/GameScene/Character/useAnimation.cpp:66:    animation->nextFrame2(deltaT);
src/Common/Class/GameScene/Character/useAnimation.cpp:71:    animation->setAnimationTime(animationTimeSource);
src/Common/Class/GameScene/Character/bankPlayer.cpp:7:        bankMoine->addAnimation(render, f);
src/Common/Class/GameScene/Character/bankPlayer.cpp:9:        bankKitsune->addAnimation(render, f);
src/Common/Class/GameScene/Camera/moveCamera.cpp:13://    verifyHitbox(Tools->QueryWindowWidth(), Tools->QueryWindowHeight(), x, y, map);
src/Common/Class/GameScene/Camera/moveCamera.cpp:23:    MC->QueryPos(xMC, yMC);
src/Common/Class/GameScene/Camera/moveCamera.cpp:29:    WindowW = Tools->QueryWindowWidth();
src/Common/Class/GameScene/Camera/moveCamera.cpp:30:    if (MC->VerifyRight())
src/Common/Class/GameScene/Camera/moveCamera.cpp:31:        distance = (x + WindowW / 2) - (xMC + Decalage);
src/Common/Class/GameScene/Camera/moveCamera.cpp:33:        distance = (x + WindowW / 2) - (xMC - Decalage);
src/Common/Class/GameScene/Camera/moveCamera.cpp:45:    MC->QueryPos(xMC, yMC);
src/Common/Class/GameScene/Camera/moveCamera.cpp:51:    vX = MC->QueryMoveX();
src/Common/Class/GameScene/Camera/moveCamera.cpp:59:    WindowW = Tools->QueryWindowWidth();
src/Common/Class/GameScene/Camera/moveCamera.cpp:61:        distance = (x + WindowW / 2) - (xMC + Decalage);
src/Common/Class/GameScene/Camera/moveCamera.cpp:63:        distance = (x + WindowW / 2) - (xMC - Decalage);
src/Common/Class/GameScene/Camera/moveCamera.cpp:92:        moveWithTest(xSource > 0, Tools->QueryWindowWidth(), Tools->QueryWindowHeight(), x, y, map);
src/Common/Class/GameScene/GameScene/Load.cpp:35:    borneMaxX = Tools->transformWidth(borneMaxXSource);
src/Common/Class/GameScene/GameScene/Load.cpp:36:    borneMinX = Tools->transformHeight(borneMinXSource);
src/Common/Class/GameScene/HitBox/set.cpp:5:    w = Tools->transformWidth(wSource);
src/Common/Class/GameScene/HitBox/set.cpp:10:    h = Tools->transformHeight(hSource);
src/Common/Class/GameScene/HitBox/set.cpp:15:    x = Tools->transformX(xSource);
src/Common/Class/GameScene/HitBox/set.cpp:20:    y = Tools->transformY(ySource);
src/Common/Class/GameScene/HitBox/create.cpp:5:    w = Tools->transformWidth(wSource);
src/Common/Class/GameScene/HitBox/create.cpp:6:    h = Tools->transformHeight(hSource);
src/Common/Class/GameScene/HitBox/create.cpp:11:    x = Tools->transformX(xSource);
src/Common/Class/GameScene/HitBox/create.cpp:12:    y = Tools->transformY(ySource);
src/Common/Class/GameScene/HitBox/create.cpp:17:    w = Tools->transformWidth(wSource);
src/Common/Class/GameScene/HitBox/create.cpp:18:    h = Tools->transformHeight(hSource);
src/Common/Class/GameScene/HitBox/create.cpp:19:    x = Tools->transformX(xSource);
src/Common/Class/GameScene/HitBox/create.cpp:20:    y = Tools->transformY(ySource);
src/Common/Class/Enemy/EnemyBank/Query.cpp:10:        if (name == enemy[i]->QueryName())
src/Common/Class/Enemy/Enemy/Query.cpp:5:    animation->QuerySize(wDest, hDest);
src/Common/Class/Enemy/Enemy/Query.cpp:6:    physic->QueryPostion(xDest, yDest);
src/Common/Class/Enemy/Enemy/Query.cpp:11:    animation->QuerySize(wDest, hDest);
src/Common/Class/Enemy/Enemy/Query.cpp:16:    physic->QueryPostion(xDest, yDest);
src/Common/Class/Enemy/Enemy/updateEnemy.cpp:42:    animation->nextFrame2(deltaT);
src/Common/Class/Enemy/Enemy/updateEnemy.cpp:50:    physic->updateSpeed(deltaT);
src/Common/Class/Enemy/Enemy/updateEnemy.cpp:51:    physic->updatePosition(deltaT);
src/Common/Class/Enemy/Enemy/updateEnemy.cpp:53:    verifyHitbox(physic, w, h, -5000, 5000);
src/Common/Class/Enemy/Enemy/updateEnemy.cpp:58:    texture = animation->QueryTexture(right);
src/Common/Class/Enemy/Enemy/updateEnemy.cpp:59:    frame = animation->QueryFrame();
src/Common/Class/Enemy/Enemy/updateEnemy.cpp:60:    physic->setHitBox(animation->QueryHitbox(right));
src/Common/Class/Enemy/Enemy/updateEnemy.cpp:61:    physic->setAttack(animation->QueryAttack(right));
src/Common/Class/Enemy/Enemy/set.cpp:12:    newAnimation = animationBank->QueryAnimationByname(name);
src/Common/Class/Enemy/Enemy/set.cpp:21:        animation->restartAnimation();
src/Common/Class/Enemy/Enemy/set.cpp:23:    physic->setSpeedX(animation->QueryMovementX(right));
src/Common/Class/Enemy/Enemies/update.cpp:10:        enemies[i]->setID(i);
src/Common/Class/Enemy/Enemies/update.cpp:23:        enemies[i]->setActionToUse(MC);
src/Common/Class/Enemy/Enemies/update.cpp:24:        enemies[i]->updateFrame(deltaT);
src/Common/Class/Enemy/Enemies/update.cpp:25:        enemies[i]->moveCharacter(deltaT);
src/Common/Class/Enemy/Enemies/update.cpp:26:        enemies[i]->getFrame();
src/Common/Class/Enemy/Enemies/addEnemy.cpp:9:    physic->setPosX(x);
src/Common/Class/Enemy/Enemies/addEnemy.cpp:10:    physic->setPosY(y);
src/Common/Class/Enemy/Enemies/addEnemy.cpp:21:    physic->setPosXPixel(x);
src/Common/Class/Enemy/Enemies/addEnemy.cpp:22:    physic->setPosYPixel(y);
src/Common/Class/Enemy/Enemies/addEnemy.cpp:33:    newEnemy->initEnemyAnimationBank(enemySource->QueryAnimationBank());
src/Common/Class/Enemy/Enemies/addEnemy.cpp:34:    newEnemy->initAlgo(enemySource->QueryAlgo());
src/Common/Class/Enemy/Enemies/addEnemy.cpp:43:    newEnemy = copyEnemy(enemyBank->QueryEnemy(name));
src/Common/Class/Enemy/Enemies/addEnemy.cpp:44:    newEnemy->initEnemyPhysic(initPhysicEnemy(x, y));
src/Common/Class/Enemy/Enemies/addEnemy.cpp:45:    newEnemy->loadAnimation(WALK);
src/Common/Class/Enemy/Enemies/addEnemy.cpp:46:    newEnemy->getFrame();
src/Common/Class/Enemy/Enemies/addEnemy.cpp:56:    newEnemy = copyEnemy(enemyBank->QueryEnemy(name));
src/Common/Class/Enemy/Enemies/addEnemy.cpp:57:    newEnemy->initEnemyPhysic(initPhysicEnemyPixel(x, y));
src/Common/Class/Enemy/Enemies/addEnemy.cpp:58:    newEnemy->loadAnimation(WALK);
src/Common/Class/Enemy/Enemies/addEnemy.cpp:59:    newEnemy->getFrame();
src/Common/Class/Scene/Element/border/borderCreate.cpp:5:    rect->w = w;
src/Common/Class/Scene/Element/border/borderCreate.cpp:6:    rect->h = h;
src/Common/Class/Scene/Element/border/borderCreate.cpp:7:    rect->x = x;
src/Common/Class/Scene/Element/border/borderCreate.cpp:8:    rect->y = y;
src/Common/Class/Scene/Element/border/borderCreate.cpp:23:    color = SDL_MapRGBA(surface->format, red, green, blue, alpha);
src/Common/Class/Scene/Element/border/borderCreate.cpp:50:    createRect(rectUp, elementSize->w + 2 * borderSize_w, borderSize_h, elementSize->x - borderSize_w, elementSize->y - borderSize_h);
src/Common/Class/Scene/Element/border/borderCreate.cpp:51:    createRect(rectDown, elementSize->w + 2 * borderSize_w, borderSize_h, elementSize->x - borderSize_w, elementSize->y + elementSize->h);
src/Common/Class/Scene/Element/border/borderCreate.cpp:52:    createRect(rectRight, borderSize_w, elementSize->h + borderSize_h * 2, elementSize->x + elementSize->w, elementSize->y - borderSize_h);
src/Common/Class/Scene/Element/border/borderCreate.cpp:53:    createRect(rectLeft, borderSize_w, elementSize->h + borderSize_h * 2, elementSize->x - borderSize_w, elementSize->y - borderSize_h);
src/Common/Class/Scene/Element/element/ElementResize.cpp:6:        elementButton->resize(w, h, x, y);
src/Common/Class/Scene/Element/element/ElementResize.cpp:8:        elementNoButton->resize(w, h, x, y);
src/Common/Class/Scene/Element/element/ElementResize.cpp:15:        elementButton->resizePixel(w, h, x, y);
src/Common/Class/Scene/Element/element/ElementResize.cpp:17:        elementNoButton->resizePixel(w, h, x, y);
src/Common/Class/Scene/Element/element/elementQuery.cpp:12:        return (elementButton->QueryNoButtonTexture());
src/Common/Class/Scene/Element/element/elementQuery.cpp:16:        return (elementNoButton->QueryNoButtonTexture());
src/Common/Class/Scene/Element/element/elementQuery.cpp:24:        return (elementButton->QuerySize());
src/Common/Class/Scene/Element/element/elementQuery.cpp:28:        return (elementNoButton->QuerySize());
src/Common/Class/Scene/Element/element/elementQuery.cpp:44:    return (text->QueryTexte());
src/Common/Class/Scene/Element/element/elementQuery.cpp:49:    return (text->QuerySize());
src/Common/Class/Scene/Element/element/elementSet.cpp:22:    text->policeSetting(color, flags, marginX, marginY);
src/Common/Class/Scene/Element/element/elementSet.cpp:32:    text->zoomText(zoom);
src/Common/Class/Scene/Element/element/element.cpp:31:        return (elementButton->useFonction());
src/Common/Class/Scene/Element/element/elementCreate.cpp:7:    elementNoButton->addNoButtonFromHand(color, render, w, h, x, y);
src/Common/Class/Scene/Element/element/elementCreate.cpp:15:    elementButton->addButtonFromHand(color, render, w, h, x, y, f);
src/Common/Class/Scene/Element/element/elementCreate.cpp:23:    elementNoButton->addNoButtonFromPng(route, render, w, h, x, y);
src/Common/Class/Scene/Element/element/elementCreate.cpp:31:    elementButton->addButtonFromPng(route, render, w, h, x, y, f);
src/Common/Class/Scene/Element/element/elementCreate.cpp:39:    border->createTexture(colorSource, render);
src/Common/Class/Scene/Element/element/elementCreate.cpp:40:    border->createBorder(QueryElementSize());
src/Common/Class/Scene/Element/element/elementCreate.cpp:46:    brightness->initBright(render, color);
src/Common/Class/Scene/Element/element/elementCreate.cpp:47:    brightness->addBrillance(QueryElementSize());
src/Common/Class/Scene/Element/element/elementCreate.cpp:53:    text->writeTexte(comment, QueryElementSize(), render);
src/Common/Class/Scene/Element/element/elementCreate.cpp:54:    text->initZoomIn();
src/Common/Class/Scene/Element/element/elementCreate.cpp:55:    text->initZoomOut();
src/Common/Class/Scene/Element/element/elementCreate.cpp:60:    text->writeTexteScaleW(comment, QueryElementSize(), render);
src/Common/Class/Scene/Element/element/elementCreate.cpp:61:    text->initZoomIn();
src/Common/Class/Scene/Element/element/elementCreate.cpp:62:    text->initZoomOut();
src/Common/Class/Scene/Element/element/elementCreate.cpp:67:    text->changeText(comment, QueryElementSize(), render);
src/Common/Class/Scene/Element/element/elementCreate.cpp:68:    text->initZoomIn();
src/Common/Class/Scene/Element/element/elementCreate.cpp:69:    text->initZoomOut();    
src/Common/Class/Scene/Element/brightness/brightnessCreate.cpp:11:    SDL_FillRect(surface, NULL, SDL_MapRGBA(surface->format, color.QueryRed(), color.QueryGreen(), color.QueryBlue(), color.QueryAlpha()));
src/Common/Class/Scene/Element/brightness/brightnessCreate.cpp:23:    rect->w = size->w;
src/Common/Class/Scene/Element/brightness/brightnessCreate.cpp:24:    rect->h = size->h;
src/Common/Class/Scene/Element/brightness/brightnessCreate.cpp:25:    rect->x = size->x;
src/Common/Class/Scene/Element/brightness/brightnessCreate.cpp:26:    rect->y = size->y;
src/Common/Class/Scene/Element/Button/NoButton.cpp:6:    Tools->setSize(buttonSize, 0, 0, 0, 0);
src/Common/Class/Scene/Element/Button/NoButton.cpp:16:    Tools->verbose(LEVEL3, "s", "--start DEBUG Size--");
src/Common/Class/Scene/Element/Button/NoButton.cpp:17:    Tools->verbose(LEVEL3, "sffff", "size receive =", w, h, x, y);
src/Common/Class/Scene/Element/Button/NoButton.cpp:18:    Tools->setSize(buttonSize, w, h, x, y);
src/Common/Class/Scene/Element/Button/NoButton.cpp:19:    Tools->verbose(LEVEL3, "sdddd", "size of the button =", buttonSize->w, buttonSize->h, buttonSize->x, buttonSize->y);
src/Common/Class/Scene/Element/Button/NoButton.cpp:20:    Tools->verbose(LEVEL3, "s", "--end DEBUG Size--\n\n");
src/Common/Class/Scene/Element/Button/NoButton.cpp:25:    buttonSize->w = w;
src/Common/Class/Scene/Element/Button/NoButton.cpp:26:    buttonSize->h = h;
src/Common/Class/Scene/Element/Button/NoButton.cpp:27:    buttonSize->x = x;
src/Common/Class/Scene/Element/Button/NoButton.cpp:28:    buttonSize->y = y;
src/Common/Class/Scene/Element/Button/NoButton.cpp:49:    color = SDL_MapRGBA(surface->format, red, green, blue, alpha);
src/Common/Class/Scene/Element/font/fontInit.cpp:27:    zoomIn->w = size->w + ZOOM;
src/Common/Class/Scene/Element/font/fontInit.cpp:28:    zoomIn->h = size->h + ZOOM;
src/Common/Class/Scene/Element/font/fontInit.cpp:29:    zoomIn->y = size->y - ZOOM / 2;
src/Common/Class/Scene/Element/font/fontInit.cpp:31:        zoomIn->x = size->x - ZOOM / 2;
src/Common/Class/Scene/Element/font/fontInit.cpp:33:        zoomIn->x = size->x - ZOOM;
src/Common/Class/Scene/Element/font/fontInit.cpp:38:    zoomOut->w = size->w - ZOOM;
src/Common/Class/Scene/Element/font/fontInit.cpp:39:    zoomOut->h = size->h - ZOOM;
src/Common/Class/Scene/Element/font/fontInit.cpp:40:    zoomOut->y = size->y + ZOOM / 2;
src/Common/Class/Scene/Element/font/fontInit.cpp:42:        zoomOut->x = size->x + ZOOM / 2;
src/Common/Class/Scene/Element/font/fontInit.cpp:44:        zoomOut->x = size->x + ZOOM;
src/Common/Class/Scene/Element/font/fontWrite.cpp:19:    div_w = sizeSource->w - (2 * marginX);
src/Common/Class/Scene/Element/font/fontWrite.cpp:20:    div_h = sizeSource->h - (2 * marginY);
src/Common/Class/Scene/Element/font/fontWrite.cpp:21:    div_x = sizeSource->x + marginX;
src/Common/Class/Scene/Element/font/fontWrite.cpp:22:    div_y = sizeSource->y + marginY - ((float)div_h / 12);
src/Common/Class/Scene/Element/font/fontWrite.cpp:23://    std::cout << "div = " << div_h << " -- " << div_y << " whithout margin " << size->h << " -- "<< size->y << std::endl;
src/Common/Class/Scene/Element/font/fontWrite.cpp:24:    size->h = div_h;
src/Common/Class/Scene/Element/font/fontWrite.cpp:26:        size->w = size->h * ratio;
src/Common/Class/Scene/Element/font/fontWrite.cpp:30:        size->w = 0;
src/Common/Class/Scene/Element/font/fontWrite.cpp:32:    size->y = div_y;
src/Common/Class/Scene/Element/font/fontWrite.cpp:33:    if (size->w > div_w)
src/Common/Class/Scene/Element/font/fontWrite.cpp:35:        std::cout << "texte trop long " << size->w << std::endl;
src/Common/Class/Scene/Element/font/fontWrite.cpp:41:        size->x = (div_x + (div_w) / 2) - (size->w / 2);
src/Common/Class/Scene/Element/font/fontWrite.cpp:42://        std::cout << CS_size->x << " -- " << div_x + div_h << std::endl;
src/Common/Class/Scene/Element/font/fontWrite.cpp:46:        size->x = div_x;
src/Common/Class/Scene/Element/font/fontWrite.cpp:50:        size->x = (div_x + div_h) - size->w;
src/Common/Class/Scene/Element/font/fontWrite.cpp:72:    div_w = sizeSource->w - (2 * marginX);
src/Common/Class/Scene/Element/font/fontWrite.cpp:73:    div_h = sizeSource->h - (2 * marginY);
src/Common/Class/Scene/Element/font/fontWrite.cpp:74:    div_x = sizeSource->x + marginX + ((float)div_w / 64);
src/Common/Class/Scene/Element/font/fontWrite.cpp:75:    div_y = sizeSource->y + marginY - ((float)div_h / 12);
src/Common/Class/Scene/Element/font/fontWrite.cpp:76:    size->w = div_w;
src/Common/Class/Scene/Element/font/fontWrite.cpp:78:        size->h = size->w * ratio;
src/Common/Class/Scene/Element/font/fontWrite.cpp:80:        size->h = 0;        
src/Common/Class/Scene/Element/font/fontWrite.cpp:81:    size->y = div_y + (div_h / 2) - (size->h / 2);
src/Common/Class/Scene/Element/font/fontWrite.cpp:82:    size->x = div_x;
src/Common/Class/Scene/Element/font/fontWrite.cpp:94://    std::cout << "change zoom - " << zoom << std::endl;
src/Common/Class/Scene/Element/font/fontQuery.cpp:10://    std::cout << "the zoom is set as - " << zoom << std::endl;
src/Common/Class/Scene/SceneControl/scene.cpp:5:    Tools->verbose(LEVEL2, "s", "create scene");
src/Common/Class/Scene/SceneControl/scene.cpp:16:    Tools->verbose(LEVEL2, "s", "delete scene");
src/Common/Class/Scene/SceneControl/scene.cpp:53:    if (index == -1)
src/Common/Class/Scene/SceneControl/scene.cpp:55:    sceneContain[index]->setDisp(disp);
src/Common/Class/Scene/SceneControl/scene.cpp:66:    if (index == -1)
src/Common/Class/Scene/SceneControl/scene.cpp:68:    sceneContain[index]->setButton(button);   
src/Common/Class/Scene/SceneControl/sceneElement.cpp:7:    if (index == -1)
src/Common/Class/Scene/SceneControl/sceneElement.cpp:11:    std::cout << "element = " << sceneContain[i]->QueryName() << std::endl;
src/Common/Class/Scene/SceneControl/sceneElement.cpp:12:    sceneContain[i]->setPoliceSettings(colorText);
src/Common/Class/Scene/SceneControl/sceneElement.cpp:13:    sceneContain[i]->addTextToElement(comment, render);
src/Common/Class/Scene/SceneControl/sceneElement.cpp:20:    if (index == -1)
src/Common/Class/Scene/SceneControl/sceneElement.cpp:24:    sceneContain[i]->setPoliceSettings(colorText);
src/Common/Class/Scene/SceneControl/sceneElement.cpp:25:    sceneContain[i]->addTextToElementScaleW(comment, render);
src/Common/Class/Scene/SceneControl/sceneElement.cpp:32:    if (index == -1)
src/Common/Class/Scene/SceneControl/sceneElement.cpp:36:    sceneContain[i]->loadBorder(colorBordure, render);
src/Common/Class/Scene/SceneControl/sceneElement.cpp:45:    while (i < sceneLen && element->QueryElementZIndex() >= sceneContain[i]->QueryElementZIndex())
src/Common/Class/Scene/SceneControl/sceneElement.cpp:55:    element->CreateNoButtonFromHand(colorSource, colorBrightness, render, w, h, x, y);
src/Common/Class/Scene/SceneControl/sceneElement.cpp:56:    element->setZIndex(z);
src/Common/Class/Scene/SceneControl/sceneElement.cpp:57:    element->loadName(name);
src/Common/Class/Scene/SceneControl/sceneElement.cpp:64:    element->CreateButtonFromHand(colorSource, colorBrightness, render, w, h, x, y, f);
src/Common/Class/Scene/SceneControl/sceneElement.cpp:65:    element->setZIndex(z);
src/Common/Class/Scene/SceneControl/sceneElement.cpp:66:    element->loadName(name);
src/Common/Class/Scene/SceneControl/sceneElement.cpp:73:    element->CreateNoButtonFromPng(route, colorBrightness, render, w, h, x, y);
src/Common/Class/Scene/SceneControl/sceneElement.cpp:74:    element->setZIndex(z);
src/Common/Class/Scene/SceneControl/sceneElement.cpp:75:    element->loadName(name);
src/Common/Class/Scene/SceneControl/sceneElement.cpp:82:    element->CreateButtonFromPng(route, colorBrightness, render, w, h, x, y, f);
src/Common/Class/Scene/SceneControl/sceneElement.cpp:83:    element->setZIndex(z);
src/Common/Class/Scene/SceneControl/sceneElement.cpp:84:    element->loadName(name);
src/Common/Class/Scene/SceneControl/sceneElement.cpp:95:        sceneLen--;
src/Common/Class/Scene/SceneControl/sceneQuery.cpp:20:    return (sceneContain[index]->QueryName());
src/Common/Class/Scene/SceneControl/sceneQuery.cpp:30:        if (sceneContain[i]->QueryName().compare(name) == 0)
src/Common/Class/Scene/SceneControl/sceneQuery.cpp:35:    return (-1);
src/EditMap/gameLoop/Init/initParallax.cpp:9:    parallax->createLayer(render, "resources/source/FondNeige/FOND2/backgroundlayer0.png", 0.0625, 0);
src/EditMap/gameLoop/Init/initParallax.cpp:10:    parallax->createLayer(render, "resources/source/FondNeige/FOND2/backgroundlayer1.png", 0.125, 1);
src/EditMap/gameLoop/Init/initParallax.cpp:11:    parallax->createLayer(render, "resources/source/FondNeige/FOND2/backgroundlayer2.png", 0.25, 2);
src/EditMap/gameLoop/Init/initParallax.cpp:12:    parallax->createLayer(render, "resources/source/FondNeige/FOND2/backgroundlayer3.png", 0.5, 3);
src/EditMap/gameLoop/loop.cpp:20:    if ((actionTable->right & KeyHoldPress) && (actionTable->left & KeyReleaseNoPress))
src/EditMap/gameLoop/loop.cpp:21:        action->right = actionTable->right;
src/EditMap/gameLoop/loop.cpp:22:    if ((actionTable->left & KeyHoldPress) && (actionTable->right & KeyReleaseNoPress))
src/EditMap/gameLoop/loop.cpp:23:        action->left = actionTable->left;
src/EditMap/gameLoop/loop.cpp:24:    if ((actionTable->up & KeyHoldPress) && (actionTable->down & KeyReleaseNoPress))
src/EditMap/gameLoop/loop.cpp:25:        action->up = actionTable->up;
src/EditMap/gameLoop/loop.cpp:26:    if ((actionTable->down & KeyHoldPress) && (actionTable->up & KeyReleaseNoPress))
src/EditMap/gameLoop/loop.cpp:27:        action->down = actionTable->down;
src/EditMap/gameLoop/loop.cpp:29:    action->escape = actionTable->escape;
src/EditMap/gameLoop/loop.cpp:30:    action->att = actionTable->att;
src/EditMap/gameLoop/loop.cpp:31:    action->dodge = actionTable->dodge;
src/EditMap/gameLoop/loop.cpp:32:    action->jump = actionTable->jump;
src/EditMap/gameLoop/loop.cpp:48:    camera->QueryCameraPosition(xCamera, yCamera);
src/EditMap/gameLoop/loop.cpp:61:    i = assets->QueryNbAssets() - 1;
src/EditMap/gameLoop/loop.cpp:64:        asset = assets->QueryAsset(i);
src/EditMap/gameLoop/loop.cpp:65:        asset->QuerySize(w, h, x, y);
src/EditMap/gameLoop/loop.cpp:68:        i--;
src/EditMap/gameLoop/loop.cpp:72:        assetSelected = assets->QueryAsset(i);
src/EditMap/gameLoop/loop.cpp:84:        assetSelected = assets->loadAssetPixel(assetSelected->QueryName(), 1, 0, 0);
src/EditMap/gameLoop/loop.cpp:93:    if (table->left & KeyHoldPress)
src/EditMap/gameLoop/loop.cpp:94:        camera->moveCamera2(-5, 0, NULL);
src/EditMap/gameLoop/loop.cpp:95:    if (table->right & KeyHoldPress)
src/EditMap/gameLoop/loop.cpp:96:        camera->moveCamera2(5, 0, NULL);
src/EditMap/gameLoop/loop.cpp:97:    if (table->dodge & KeyPress)
src/EditMap/gameLoop/loop.cpp:99:    if (table->att & KeyRelease)
src/EditMap/gameLoop/loop.cpp:101:    if (table->jump & KeyPress)
src/EditMap/gameLoop/loop.cpp:102:        assets->printAsset();
src/EditMap/gameLoop/loop.cpp:168:        render->saveScreen();
src/EditMap/gameLoop/loop.cpp:193:        camera->QueryCameraPosition(xCamera, yCamera);
src/EditMap/gameLoop/loop.cpp:194:        assetSelected->QuerySize(w, h, x, y);
src/EditMap/gameLoop/loop.cpp:195:        assetSelected->moveAsset((xMouse + xCamera) - w / 2, (yMouse + yCamera) - h / 2, true);
src/EditMap/gameLoop/loop.cpp:211:    scene = initGameScene(render->QueryRender());
src/EditMap/gameLoop/loop.cpp:212:    camera = scene->QueryCamera();
src/EditMap/gameLoop/loop.cpp:213:    parallax = scene->QueryParallax();
src/EditMap/gameLoop/loop.cpp:220:    assets = scene->QueryAssets();
src/EditMap/gameLoop/loop.cpp:241:            editAnimationUseAction(event, &action, scene->QueryCamera(), assetSelected, assets, haveAnAsset);
src/EditMap/gameLoop/loop.cpp:246:        render->renderGameScene(scene);
src/EditMap/gameLoop/loop.cpp:247:        render->renderScene(scene);
src/EditMap/gameLoop/loop.cpp:248:        render->dispScreen();
src/EditMap/gameLoop/loop.cpp:250:        SDL_Delay(fmax(0, (1000 / (float)60 - timer.get_ticks())));
src/EditMap/gameLoop/Init/initGameScene.cpp:8:    scene->loadRenderer(render);
src/EditMap/gameLoop/Init/initGameScene.cpp:10:    scene->loadCamera(initCamera());
src/EditMap/gameLoop/Init/initGameScene.cpp:12:    scene->setBorderColor(0xFF, 0xFF, 0xFF, 0xFF);
src/EditMap/gameLoop/Init/initGameScene.cpp:13:    scene->setSceneColor(0x0, 0x0, 0x0, 0xFF);
src/EditMap/gameLoop/Init/initGameScene.cpp:14:    scene->createElementToScene("backGround2", 25, 100, 75, 0, 0);
src/EditMap/gameLoop/Init/initGameScene.cpp:15:    scene->addBorder(-1);
src/EditMap/gameLoop/Init/initGameScene.cpp:17:    scene->createButtonToSceneFromPng("Asset1", "resources/source/assets/BigTree01.png", 12.5, 10, 75, 0, 1, &useButton0);
src/EditMap/gameLoop/Init/initGameScene.cpp:18:    scene->createButtonToSceneFromPng("Asset2", "resources/source/assets/BigTree02.png", 12.5, 10, 87.5, 0, 1, &useButton1);
src/EditMap/gameLoop/Init/initGameScene.cpp:19:    scene->createButtonToSceneFromPng("Asset3", "resources/source/assets/BigTree03.png", 12.5, 10, 75, 10, 1, &useButton2);
src/EditMap/gameLoop/Init/initGameScene.cpp:20:    scene->createButtonToSceneFromPng("Asset4", "resources/source/assets/BushTree01.png", 12.5, 10, 87.5, 10, 1, &useButton3);
src/EditMap/gameLoop/Init/initGameScene.cpp:21:    scene->createButtonToSceneFromPng("Asset5", "resources/source/assets/BushTree02.png", 12.5, 10, 75, 20, 1, &useButton4);
src/EditMap/gameLoop/Init/initGameScene.cpp:22:    scene->createButtonToSceneFromPng("Asset6", "resources/source/assets/BushTree03.png", 12.5, 10, 87.5, 20, 1, &useButton5);
src/EditMap/gameLoop/Init/initGameScene.cpp:23:    scene->createButtonToSceneFromPng("Asset7", "resources/source/assets/BushTree04.png", 12.5, 10, 75, 30, 1, &useButton6);
src/EditMap/gameLoop/Init/initGameScene.cpp:24:    scene->createButtonToSceneFromPng("Asset8", "resources/source/assets/Grass01.png", 12.5, 10, 87.5, 30, 1, &useButton7);
src/EditMap/gameLoop/Init/initGameScene.cpp:25:    scene->createButtonToSceneFromPng("Asset9", "resources/source/assets/Grass02.png", 12.5, 10, 75, 40, 1, &useButton8);
src/EditMap/gameLoop/Init/initGameScene.cpp:26:    scene->createButtonToSceneFromPng("Asset10", "resources/source/assets/Grass03.png",  12.5, 10, 87.5, 40, 1, &useButton9);
src/EditMap/gameLoop/Init/initGameScene.cpp:27:    scene->createButtonToSceneFromPng("Asset11", "resources/source/assets/Grass04.png",  12.5, 10, 75, 50, 1, &useButton10);
src/EditMap/gameLoop/Init/initGameScene.cpp:28:    scene->createButtonToSceneFromPng("Asset12", "resources/source/assets/Grass05.png",  12.5, 10, 87.5, 50, 1, &useButton11);
src/EditMap/gameLoop/Init/initGameScene.cpp:29:    scene->createButtonToSceneFromPng("Asset13", "resources/source/assets/Ground01.png",  12.5, 10, 75, 60, 1, &useButton12);
src/EditMap/gameLoop/Init/initGameScene.cpp:30:    scene->createButtonToSceneFromPng("Asset14", "resources/source/assets/MediumTree01.png",  12.5, 10, 87.5, 60, 1, &useButton13);
src/EditMap/gameLoop/Init/initGameScene.cpp:31:    scene->createButtonToSceneFromPng("Asset15", "resources/source/assets/MediumTree02.png",  12.5, 10, 75, 70, 1, &useButton14);
src/EditMap/gameLoop/Init/initGameScene.cpp:32:    scene->createButtonToSceneFromPng("Asset16", "resources/source/assets/MediumTree03.png",  12.5, 10, 87.5, 70, 1, &useButton15);
src/EditMap/gameLoop/Init/initGameScene.cpp:33:    scene->createButtonToSceneFromPng("Asset17", "resources/source/assets/SmallTree01.png",  12.5, 10, 75, 80, 1, &useButton16);
src/EditMap/gameLoop/Init/initGameScene.cpp:34:    scene->createButtonToSceneFromPng("Asset18", "resources/source/assets/SmallTree02.png",  12.5, 10, 87.5, 80, 1, &useButton17);
src/EditMap/gameLoop/Init/initGameScene.cpp:35:    scene->createButtonToSceneFromPng("Asset19", "resources/source/assets/SmallTree03.png",  12.5, 10, 75, 90, 1, &useButton18);
src/EditMap/gameLoop/Init/initGameScene.cpp:36:    scene->createButtonToSceneFromPng("Asset20", "resources/source/assets/SmallTree04.png",  12.5, 10, 87.5, 90, 1, &useButton19);
src/EditMap/gameLoop/Init/initGameScene.cpp:38:    scene->loadParallax(initParallax(render));
src/EditMap/gameLoop/Init/initGameScene.cpp:39:    scene->loadAssets(initAssets(render));
src/EditMap/gameLoop/Init/initAssets.cpp:9:    assetsBank->createAsset(render, "resources/source/assets/BigTree01.png", BigTree01, 30.4, 96, 100, 100, 0, 0);
src/EditMap/gameLoop/Init/initAssets.cpp:10:    assetsBank->createAsset(render, "resources/source/assets/BigTree02.png", BigTree02, 18.75, 96, 100, 100, 0, 0);
src/EditMap/gameLoop/Init/initAssets.cpp:11:    assetsBank->createAsset(render, "resources/source/assets/BigTree03.png", BigTree03, 25.4, 96, 100, 100, 0, 0);
src/EditMap/gameLoop/Init/initAssets.cpp:12:    assetsBank->createAsset(render, "resources/source/assets/BushTree01.png", BushTree01, 10.5, 8.9, 100, 100, 0, 0);
src/EditMap/gameLoop/Init/initAssets.cpp:13:    assetsBank->createAsset(render, "resources/source/assets/BushTree02.png", BushTree02, 11, 10, 100, 100, 0, 0);
src/EditMap/gameLoop/Init/initAssets.cpp:14:    assetsBank->createAsset(render, "resources/source/assets/BushTree03.png", BushTree03, 9.4, 11.3, 100, 100, 0, 0);
src/EditMap/gameLoop/Init/initAssets.cpp:15:    assetsBank->createAsset(render, "resources/source/assets/BushTree04.png", BushTree04, 10.9, 4.2, 100, 100, 0, 0);
src/EditMap/gameLoop/Init/initAssets.cpp:16:    assetsBank->createAsset(render, "resources/source/assets/Grass01.png", Grass01, 33.3, 5.3, 100, 100, 0, 0);
src/EditMap/gameLoop/Init/initAssets.cpp:17:    assetsBank->createAsset(render, "resources/source/assets/Grass02.png", Grass02, 2.4, 4.1, 100, 100, 0, 0);
src/EditMap/gameLoop/Init/initAssets.cpp:18:    assetsBank->createAsset(render, "resources/source/assets/Grass03.png", Grass03, 6.9, 8.2, 100, 100, 0, 0);
src/EditMap/gameLoop/Init/initAssets.cpp:19:    assetsBank->createAsset(render, "resources/source/assets/Grass04.png", Grass04, 5.5, 6.2, 100, 100, 0, 0);
src/EditMap/gameLoop/Init/initAssets.cpp:20:    assetsBank->createAsset(render, "resources/source/assets/Grass05.png", Grass05, 5.8, 8, 100, 100, 0, 0);
src/EditMap/gameLoop/Init/initAssets.cpp:21:    assetsBank->createAsset(render, "resources/source/assets/Ground01.png", Ground01, 10, 5.8, 100, 100, 0, 0);
src/EditMap/gameLoop/Init/initAssets.cpp:22:    assetsBank->createAsset(render, "resources/source/assets/MediumTree01.png", MediumTree01, 10, 67.8, 100, 100, 0, 0);
src/EditMap/gameLoop/Init/initAssets.cpp:23:    assetsBank->createAsset(render, "resources/source/assets/MediumTree02.png", MediumTree02, 10, 60.4, 100, 100, 0, 0);
src/EditMap/gameLoop/Init/initAssets.cpp:24:    assetsBank->createAsset(render, "resources/source/assets/MediumTree03.png", MediumTree03, 4.3, 52.9, 100, 100, 0, 0);
src/EditMap/gameLoop/Init/initAssets.cpp:25:    assetsBank->createAsset(render, "resources/source/assets/SmallTree01.png", SmallTree01, 2.8, 36.7, 100, 100, 0, 0);
src/EditMap/gameLoop/Init/initAssets.cpp:26:    assetsBank->createAsset(render, "resources/source/assets/SmallTree02.png", SmallTree02, 1.9, 42.2, 100, 100, 0, 0);
src/EditMap/gameLoop/Init/initAssets.cpp:27:    assetsBank->createAsset(render, "resources/source/assets/SmallTree03.png", SmallTree03, 3.75, 48, 100, 100, 0, 0);
src/EditMap/gameLoop/Init/initAssets.cpp:28:    assetsBank->createAsset(render, "resources/source/assets/SmallTree04.png", SmallTree04, 2.3, 42.6, 100, 100, 0, 0);
src/EditMap/gameLoop/Init/initAssets.cpp:39:    assets->loadBank(initAssetsBankLevel1(render));
src/EditMap/gameLoop/Management/parallaxManagement.cpp:12:    camera->QueryCameraPosition(x, y);
src/EditMap/gameLoop/Management/parallaxManagement.cpp:13:    while (i < parallax->QueryNbLayers())
src/EditMap/gameLoop/Management/parallaxManagement.cpp:15:        layer = parallax->QueryLayer(i);
src/EditMap/gameLoop/Management/parallaxManagement.cpp:16:        layer->moveLayer(x);
src/EditMap/gameLoop/Management/changeAsset.cpp:7:    index = assetSelected->QueryID();
src/EditMap/gameLoop/Management/changeAsset.cpp:8:    assets->deleteAsset(index);
src/EditMap/gameLoop/Management/buttonFonction.cpp:6:    assetSelected = assets->loadAsset(BigTree01, 1, 40, YBigTree01);
src/EditMap/gameLoop/Management/buttonFonction.cpp:14:    assetSelected = assets->loadAsset(BigTree02, 1, 40, YBigTree02);
src/EditMap/gameLoop/Management/buttonFonction.cpp:21:    assetSelected = assets->loadAsset(BigTree03, 1, 40, YBigTree03);
src/EditMap/gameLoop/Management/buttonFonction.cpp:28:    assetSelected = assets->loadAsset(BushTree01, 1, 40, YBushTree01);
src/EditMap/gameLoop/Management/buttonFonction.cpp:35:    assetSelected = assets->loadAsset(BushTree02, 1, 40, YBushTree02);
src/EditMap/gameLoop/Management/buttonFonction.cpp:42:    assetSelected = assets->loadAsset(BushTree03, 1, 40, YBushTree03);
src/EditMap/gameLoop/Management/buttonFonction.cpp:49:    assetSelected = assets->loadAsset(BushTree04, 1, 40, YBushTree04);
src/EditMap/gameLoop/Management/buttonFonction.cpp:56:    assetSelected = assets->loadAsset(Grass01, 1, 40, YGrass01);
src/EditMap/gameLoop/Management/buttonFonction.cpp:63:    assetSelected = assets->loadAsset(Grass02, 1, 40, YGrass02);
src/EditMap/gameLoop/Management/buttonFonction.cpp:70:    assetSelected = assets->loadAsset(Grass03, 1, 40, YGrass03);
src/EditMap/gameLoop/Management/buttonFonction.cpp:77:    assetSelected = assets->loadAsset(Grass04, 1, 40, YGrass04);
src/EditMap/gameLoop/Management/buttonFonction.cpp:84:    assetSelected = assets->loadAsset(Grass05, 1, 40, YGrass05);
src/EditMap/gameLoop/Management/buttonFonction.cpp:91:    assetSelected = assets->loadAsset(Ground01, 1, 40, YGround01);
src/EditMap/gameLoop/Management/buttonFonction.cpp:98:    assetSelected = assets->loadAsset(MediumTree01, 1, 40, YMediumTree01);
src/EditMap/gameLoop/Management/buttonFonction.cpp:105:    assetSelected = assets->loadAsset(MediumTree02, 1, 40, YMediumTree02);
src/EditMap/gameLoop/Management/buttonFonction.cpp:112:    assetSelected = assets->loadAsset(MediumTree03, 1, 40, YMediumTree03);
src/EditMap/gameLoop/Management/buttonFonction.cpp:119:    assetSelected = assets->loadAsset(SmallTree01, 1, 40, YSmallTree01);
src/EditMap/gameLoop/Management/buttonFonction.cpp:126:    assetSelected = assets->loadAsset(SmallTree02, 1, 40, YSmallTree02);
src/EditMap/gameLoop/Management/buttonFonction.cpp:133:    assetSelected = assets->loadAsset(SmallTree03, 1, 40, YSmallTree03);
src/EditMap/gameLoop/Management/buttonFonction.cpp:140:    assetSelected = assets->loadAsset(SmallTree04, 1, 40, YSmallTree04);
src/EditMap/main.cpp:23:    Tools->getWindowSize(w, h);
src/EditMap/main.cpp:26:    initFont.initPolice("resources/alterebro-pixel-font.ttf");
